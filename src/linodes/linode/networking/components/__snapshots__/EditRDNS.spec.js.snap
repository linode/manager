// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`linodes/linode/networking/components/EditRDNS should render without error 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditRDNS
    close={[Function]}
    dispatch={[Function]}
    ip={
        Object {
            "address": "97.107.143.0",
            "gateway": "97.107.143.0",
            "key": "97.107.143.0",
            "linode_id": 1234,
            "prefix": 24,
            "rdns": "li1-1.members.linode.com",
            "type": "public",
            "version": "ipv4",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "analytics": Object {
        "title": "Edit RDNS Entry",
      },
      "buttonDisabledText": "Saving",
      "buttonText": "Save",
      "children": Array [
        <p>
          This request may take a while.
</p>,
        <ModalFormGroup
          apiKey=""
          errors={Object {}}
          id="address"
          label="IP Address"
>
          <Input
                    className=""
                    disabled={true}
                    id="address"
                    value="97.107.143.0"
          />
</ModalFormGroup>,
        <ModalFormGroup
          apiKey="rdns"
          errors={Object {}}
          id="hostname"
          label="Hostname"
>
          <Input
                    className=""
                    id="hostname"
                    name="hostname"
                    onChange={[Function]}
                    placeholder="www.example.com"
                    value="li1-1.members.linode.com"
          />
</ModalFormGroup>,
      ],
      "errors": Object {},
      "noCancel": false,
      "noCancelEvent": false,
      "noSubmit": false,
      "onCancel": [Function],
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "This request may take a while.",
        },
        "ref": null,
        "rendered": "This request may take a while.",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "apiKey": "",
          "children": <Input
            className=""
            disabled={true}
            id="address"
            value="97.107.143.0"
/>,
          "errors": Object {},
          "id": "address",
          "label": "IP Address",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "",
            "disabled": true,
            "id": "address",
            "value": "97.107.143.0",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "apiKey": "rdns",
          "children": <Input
            className=""
            id="hostname"
            name="hostname"
            onChange={[Function]}
            placeholder="www.example.com"
            value="li1-1.members.linode.com"
/>,
          "errors": Object {},
          "id": "hostname",
          "label": "Hostname",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "",
            "id": "hostname",
            "name": "hostname",
            "onChange": [Function],
            "placeholder": "www.example.com",
            "value": "li1-1.members.linode.com",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "analytics": Object {
          "title": "Edit RDNS Entry",
        },
        "buttonDisabledText": "Saving",
        "buttonText": "Save",
        "children": Array [
          <p>
            This request may take a while.
</p>,
          <ModalFormGroup
            apiKey=""
            errors={Object {}}
            id="address"
            label="IP Address"
>
            <Input
                        className=""
                        disabled={true}
                        id="address"
                        value="97.107.143.0"
            />
</ModalFormGroup>,
          <ModalFormGroup
            apiKey="rdns"
            errors={Object {}}
            id="hostname"
            label="Hostname"
>
            <Input
                        className=""
                        id="hostname"
                        name="hostname"
                        onChange={[Function]}
                        placeholder="www.example.com"
                        value="li1-1.members.linode.com"
            />
</ModalFormGroup>,
        ],
        "errors": Object {},
        "noCancel": false,
        "noCancelEvent": false,
        "noSubmit": false,
        "onCancel": [Function],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "This request may take a while.",
          },
          "ref": null,
          "rendered": "This request may take a while.",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "apiKey": "",
            "children": <Input
              className=""
              disabled={true}
              id="address"
              value="97.107.143.0"
/>,
            "errors": Object {},
            "id": "address",
            "label": "IP Address",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "",
              "disabled": true,
              "id": "address",
              "value": "97.107.143.0",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "apiKey": "rdns",
            "children": <Input
              className=""
              id="hostname"
              name="hostname"
              onChange={[Function]}
              placeholder="www.example.com"
              value="li1-1.members.linode.com"
/>,
            "errors": Object {},
            "id": "hostname",
            "label": "Hostname",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "",
              "id": "hostname",
              "name": "hostname",
              "onChange": [Function],
              "placeholder": "www.example.com",
              "value": "li1-1.members.linode.com",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
