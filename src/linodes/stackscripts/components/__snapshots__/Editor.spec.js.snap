// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`linodes/stackscripts/components/Editor should render without error 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Editor
    dispatch={[Function]}
    stackscript={
        Object {
            "_polling": false,
            "created": "2015-09-29T11:21:01",
            "deployments_active": 42,
            "deployments_total": 150,
            "description": "Installs the Linode API bindings",
            "id": 37,
            "images": Array [
              "linode/debian7",
              "linode/debian8",
            ],
            "is_public": true,
            "label": "Example StackScript",
            "rev_note": "Initial import",
            "script": "#!/bin/bash",
            "updated": "2015-10-15T10:02:01",
            "user_defined_fields": Array [
              Object {},
              Object {},
            ],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <FormGroup
          className=""
>
          <CodeEditor
                    name="script"
                    onChange={[Function]}
                    value="#!/bin/bash"
          />
</FormGroup>,
        <FormGroup
          className="row"
          name="last-revision"
>
          <label
                    className="col-sm-3 col-form-label"
                    htmlFor="revision"
          >
                    Last Revision Note
          </label>
          <div
                    className="col-sm-9"
          >
                    <Input
                              className=""
                              disabled={true}
                              value="Initial import"
                    />
          </div>
</FormGroup>,
        <FormGroup
          className="row"
          name="next-revision"
>
          <label
                    className="col-sm-3 col-form-label"
                    htmlFor="revision"
          >
                    Next Revision Note
          </label>
          <div
                    className="col-sm-9"
          >
                    <Input
                              className=""
                              id="revision"
                              name="revision"
                              onChange={[Function]}
                              value=""
                    />
          </div>
</FormGroup>,
        <FormGroup
          className="row"
          name="submit"
>
          <div
                    className="offset-sm-3 col-sm-9"
          >
                    <SubmitButton
                              className="btn-default"
                              disabled={false}
                              disabledChildren="Saving"
                    >
                              Save
                    </SubmitButton>
                    <FormSummary
                              className=""
                              errors={Object {}}
                              success="Revision saved."
                    />
          </div>
</FormGroup>,
      ],
      "className": "",
      "noSubmitEvent": false,
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <CodeEditor
            name="script"
            onChange={[Function]}
            value="#!/bin/bash"
/>,
          "className": "",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "name": "script",
            "onChange": [Function],
            "value": "#!/bin/bash",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <label
              className="col-sm-3 col-form-label"
              htmlFor="revision"
>
              Last Revision Note
</label>,
            <div
              className="col-sm-9"
>
              <Input
                            className=""
                            disabled={true}
                            value="Initial import"
              />
</div>,
          ],
          "className": "row",
          "name": "last-revision",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Last Revision Note",
              "className": "col-sm-3 col-form-label",
              "htmlFor": "revision",
            },
            "ref": null,
            "rendered": "Last Revision Note",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Input
                className=""
                disabled={true}
                value="Initial import"
/>,
              "className": "col-sm-9",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "",
                "disabled": true,
                "value": "Initial import",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <label
              className="col-sm-3 col-form-label"
              htmlFor="revision"
>
              Next Revision Note
</label>,
            <div
              className="col-sm-9"
>
              <Input
                            className=""
                            id="revision"
                            name="revision"
                            onChange={[Function]}
                            value=""
              />
</div>,
          ],
          "className": "row",
          "name": "next-revision",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Next Revision Note",
              "className": "col-sm-3 col-form-label",
              "htmlFor": "revision",
            },
            "ref": null,
            "rendered": "Next Revision Note",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Input
                className=""
                id="revision"
                name="revision"
                onChange={[Function]}
                value=""
/>,
              "className": "col-sm-9",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "",
                "id": "revision",
                "name": "revision",
                "onChange": [Function],
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <div
            className="offset-sm-3 col-sm-9"
>
            <SubmitButton
                        className="btn-default"
                        disabled={false}
                        disabledChildren="Saving"
            >
                        Save
            </SubmitButton>
            <FormSummary
                        className=""
                        errors={Object {}}
                        success="Revision saved."
            />
</div>,
          "className": "row",
          "name": "submit",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SubmitButton
                className="btn-default"
                disabled={false}
                disabledChildren="Saving"
>
                Save
</SubmitButton>,
              <FormSummary
                className=""
                errors={Object {}}
                success="Revision saved."
/>,
            ],
            "className": "offset-sm-3 col-sm-9",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Save",
                "className": "btn-default",
                "disabled": false,
                "disabledChildren": "Saving",
              },
              "ref": null,
              "rendered": "Save",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "",
                "errors": Object {},
                "success": "Revision saved.",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <FormGroup
            className=""
>
            <CodeEditor
                        name="script"
                        onChange={[Function]}
                        value="#!/bin/bash"
            />
</FormGroup>,
          <FormGroup
            className="row"
            name="last-revision"
>
            <label
                        className="col-sm-3 col-form-label"
                        htmlFor="revision"
            >
                        Last Revision Note
            </label>
            <div
                        className="col-sm-9"
            >
                        <Input
                                    className=""
                                    disabled={true}
                                    value="Initial import"
                        />
            </div>
</FormGroup>,
          <FormGroup
            className="row"
            name="next-revision"
>
            <label
                        className="col-sm-3 col-form-label"
                        htmlFor="revision"
            >
                        Next Revision Note
            </label>
            <div
                        className="col-sm-9"
            >
                        <Input
                                    className=""
                                    id="revision"
                                    name="revision"
                                    onChange={[Function]}
                                    value=""
                        />
            </div>
</FormGroup>,
          <FormGroup
            className="row"
            name="submit"
>
            <div
                        className="offset-sm-3 col-sm-9"
            >
                        <SubmitButton
                                    className="btn-default"
                                    disabled={false}
                                    disabledChildren="Saving"
                        >
                                    Save
                        </SubmitButton>
                        <FormSummary
                                    className=""
                                    errors={Object {}}
                                    success="Revision saved."
                        />
            </div>
</FormGroup>,
        ],
        "className": "",
        "noSubmitEvent": false,
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <CodeEditor
              name="script"
              onChange={[Function]}
              value="#!/bin/bash"
/>,
            "className": "",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "name": "script",
              "onChange": [Function],
              "value": "#!/bin/bash",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <label
                className="col-sm-3 col-form-label"
                htmlFor="revision"
>
                Last Revision Note
</label>,
              <div
                className="col-sm-9"
>
                <Input
                                className=""
                                disabled={true}
                                value="Initial import"
                />
</div>,
            ],
            "className": "row",
            "name": "last-revision",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Last Revision Note",
                "className": "col-sm-3 col-form-label",
                "htmlFor": "revision",
              },
              "ref": null,
              "rendered": "Last Revision Note",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Input
                  className=""
                  disabled={true}
                  value="Initial import"
/>,
                "className": "col-sm-9",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "className": "",
                  "disabled": true,
                  "value": "Initial import",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <label
                className="col-sm-3 col-form-label"
                htmlFor="revision"
>
                Next Revision Note
</label>,
              <div
                className="col-sm-9"
>
                <Input
                                className=""
                                id="revision"
                                name="revision"
                                onChange={[Function]}
                                value=""
                />
</div>,
            ],
            "className": "row",
            "name": "next-revision",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Next Revision Note",
                "className": "col-sm-3 col-form-label",
                "htmlFor": "revision",
              },
              "ref": null,
              "rendered": "Next Revision Note",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Input
                  className=""
                  id="revision"
                  name="revision"
                  onChange={[Function]}
                  value=""
/>,
                "className": "col-sm-9",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "className": "",
                  "id": "revision",
                  "name": "revision",
                  "onChange": [Function],
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <div
              className="offset-sm-3 col-sm-9"
>
              <SubmitButton
                            className="btn-default"
                            disabled={false}
                            disabledChildren="Saving"
              >
                            Save
              </SubmitButton>
              <FormSummary
                            className=""
                            errors={Object {}}
                            success="Revision saved."
              />
</div>,
            "className": "row",
            "name": "submit",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <SubmitButton
                  className="btn-default"
                  disabled={false}
                  disabledChildren="Saving"
>
                  Save
</SubmitButton>,
                <FormSummary
                  className=""
                  errors={Object {}}
                  success="Revision saved."
/>,
              ],
              "className": "offset-sm-3 col-sm-9",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Save",
                  "className": "btn-default",
                  "disabled": false,
                  "disabledChildren": "Saving",
                },
                "ref": null,
                "rendered": "Save",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "className": "",
                  "errors": Object {},
                  "success": "Revision saved.",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
