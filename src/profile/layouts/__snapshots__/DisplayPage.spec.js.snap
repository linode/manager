// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`profile/DisplayPage should renders without error 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DisplayPage
    dispatch={[MockFunction]}
    profile={
      Object {
        "email": "user@address.com",
        "timezone": "US/Eastern",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <section>
          <ChangeTimezone
            dispatch={[MockFunction]}
            timezone="US/Eastern"
          />
        </section>,
        <ChangeEmail
          dispatch={[MockFunction]}
          email="user@address.com"
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ChangeTimezone
            dispatch={[MockFunction]}
            timezone="US/Eastern"
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "dispatch": [MockFunction],
            "timezone": "US/Eastern",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "section",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "dispatch": [MockFunction],
          "email": "user@address.com",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <section>
            <ChangeTimezone
              dispatch={[MockFunction]}
              timezone="US/Eastern"
            />
          </section>,
          <ChangeEmail
            dispatch={[MockFunction]}
            email="user@address.com"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ChangeTimezone
              dispatch={[MockFunction]}
              timezone="US/Eastern"
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "dispatch": [MockFunction],
              "timezone": "US/Eastern",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "section",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "dispatch": [MockFunction],
            "email": "user@address.com",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
