// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`profile/components/ChangeEmail should render without error 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ChangeEmail
    dispatch={[MockFunction]}
    email="user@example.com"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <Form
        analytics={
          Object {
            "title": "Email Settings",
          }
        }
        className=""
        noSubmitEvent={false}
        onSubmit={[Function]}
      >
        <FormGroup
          className="row"
          errors={Object {}}
          name="email"
        >
          <label
            className="col-sm-2 col-form-label"
            htmlFor="email"
          >
            Email
          </label>
          <div
            className="col-sm-10"
          >
            <Input
              className=""
              id="email"
              name="email"
              onChange={[Function]}
              type="email"
              value="user@example.com"
            />
            <FormGroupError
              className=""
              errors={Object {}}
              inline={true}
              name="email"
            />
          </div>
        </FormGroup>
        <FormGroup
          className="row"
          name="submit"
        >
          <div
            className="offset-sm-2 col-sm-10"
          >
            <SubmitButton
              className="btn-default"
              disabled={false}
              disabledChildren="Saving"
            >
              Save
            </SubmitButton>
            <FormSummary
              className=""
              errors={Object {}}
              success="Email saved."
            />
          </div>
        </FormGroup>
      </Form>,
      "className": "",
      "header": <CardHeader
        title="Change email"
      />,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "analytics": Object {
          "title": "Email Settings",
        },
        "children": Array [
          <FormGroup
            className="row"
            errors={Object {}}
            name="email"
          >
            <label
              className="col-sm-2 col-form-label"
              htmlFor="email"
            >
              Email
            </label>
            <div
              className="col-sm-10"
            >
              <Input
                className=""
                id="email"
                name="email"
                onChange={[Function]}
                type="email"
                value="user@example.com"
              />
              <FormGroupError
                className=""
                errors={Object {}}
                inline={true}
                name="email"
              />
            </div>
          </FormGroup>,
          <FormGroup
            className="row"
            name="submit"
          >
            <div
              className="offset-sm-2 col-sm-10"
            >
              <SubmitButton
                className="btn-default"
                disabled={false}
                disabledChildren="Saving"
              >
                Save
              </SubmitButton>
              <FormSummary
                className=""
                errors={Object {}}
                success="Email saved."
              />
            </div>
          </FormGroup>,
        ],
        "className": "",
        "noSubmitEvent": false,
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <label
                className="col-sm-2 col-form-label"
                htmlFor="email"
              >
                Email
              </label>,
              <div
                className="col-sm-10"
              >
                <Input
                  className=""
                  id="email"
                  name="email"
                  onChange={[Function]}
                  type="email"
                  value="user@example.com"
                />
                <FormGroupError
                  className=""
                  errors={Object {}}
                  inline={true}
                  name="email"
                />
              </div>,
            ],
            "className": "row",
            "errors": Object {},
            "name": "email",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Email",
                "className": "col-sm-2 col-form-label",
                "htmlFor": "email",
              },
              "ref": null,
              "rendered": "Email",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Input
                    className=""
                    id="email"
                    name="email"
                    onChange={[Function]}
                    type="email"
                    value="user@example.com"
                  />,
                  <FormGroupError
                    className=""
                    errors={Object {}}
                    inline={true}
                    name="email"
                  />,
                ],
                "className": "col-sm-10",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "className": "",
                    "id": "email",
                    "name": "email",
                    "onChange": [Function],
                    "type": "email",
                    "value": "user@example.com",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "className": "",
                    "errors": Object {},
                    "inline": true,
                    "name": "email",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <div
              className="offset-sm-2 col-sm-10"
            >
              <SubmitButton
                className="btn-default"
                disabled={false}
                disabledChildren="Saving"
              >
                Save
              </SubmitButton>
              <FormSummary
                className=""
                errors={Object {}}
                success="Email saved."
              />
            </div>,
            "className": "row",
            "name": "submit",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <SubmitButton
                  className="btn-default"
                  disabled={false}
                  disabledChildren="Saving"
                >
                  Save
                </SubmitButton>,
                <FormSummary
                  className=""
                  errors={Object {}}
                  success="Email saved."
                />,
              ],
              "className": "offset-sm-2 col-sm-10",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Save",
                  "className": "btn-default",
                  "disabled": false,
                  "disabledChildren": "Saving",
                },
                "ref": null,
                "rendered": "Save",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "className": "",
                  "errors": Object {},
                  "success": "Email saved.",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Form
          analytics={
            Object {
              "title": "Email Settings",
            }
          }
          className=""
          noSubmitEvent={false}
          onSubmit={[Function]}
        >
          <FormGroup
            className="row"
            errors={Object {}}
            name="email"
          >
            <label
              className="col-sm-2 col-form-label"
              htmlFor="email"
            >
              Email
            </label>
            <div
              className="col-sm-10"
            >
              <Input
                className=""
                id="email"
                name="email"
                onChange={[Function]}
                type="email"
                value="user@example.com"
              />
              <FormGroupError
                className=""
                errors={Object {}}
                inline={true}
                name="email"
              />
            </div>
          </FormGroup>
          <FormGroup
            className="row"
            name="submit"
          >
            <div
              className="offset-sm-2 col-sm-10"
            >
              <SubmitButton
                className="btn-default"
                disabled={false}
                disabledChildren="Saving"
              >
                Save
              </SubmitButton>
              <FormSummary
                className=""
                errors={Object {}}
                success="Email saved."
              />
            </div>
          </FormGroup>
        </Form>,
        "className": "",
        "header": <CardHeader
          title="Change email"
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "analytics": Object {
            "title": "Email Settings",
          },
          "children": Array [
            <FormGroup
              className="row"
              errors={Object {}}
              name="email"
            >
              <label
                className="col-sm-2 col-form-label"
                htmlFor="email"
              >
                Email
              </label>
              <div
                className="col-sm-10"
              >
                <Input
                  className=""
                  id="email"
                  name="email"
                  onChange={[Function]}
                  type="email"
                  value="user@example.com"
                />
                <FormGroupError
                  className=""
                  errors={Object {}}
                  inline={true}
                  name="email"
                />
              </div>
            </FormGroup>,
            <FormGroup
              className="row"
              name="submit"
            >
              <div
                className="offset-sm-2 col-sm-10"
              >
                <SubmitButton
                  className="btn-default"
                  disabled={false}
                  disabledChildren="Saving"
                >
                  Save
                </SubmitButton>
                <FormSummary
                  className=""
                  errors={Object {}}
                  success="Email saved."
                />
              </div>
            </FormGroup>,
          ],
          "className": "",
          "noSubmitEvent": false,
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <label
                  className="col-sm-2 col-form-label"
                  htmlFor="email"
                >
                  Email
                </label>,
                <div
                  className="col-sm-10"
                >
                  <Input
                    className=""
                    id="email"
                    name="email"
                    onChange={[Function]}
                    type="email"
                    value="user@example.com"
                  />
                  <FormGroupError
                    className=""
                    errors={Object {}}
                    inline={true}
                    name="email"
                  />
                </div>,
              ],
              "className": "row",
              "errors": Object {},
              "name": "email",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Email",
                  "className": "col-sm-2 col-form-label",
                  "htmlFor": "email",
                },
                "ref": null,
                "rendered": "Email",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Input
                      className=""
                      id="email"
                      name="email"
                      onChange={[Function]}
                      type="email"
                      value="user@example.com"
                    />,
                    <FormGroupError
                      className=""
                      errors={Object {}}
                      inline={true}
                      name="email"
                    />,
                  ],
                  "className": "col-sm-10",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "className": "",
                      "id": "email",
                      "name": "email",
                      "onChange": [Function],
                      "type": "email",
                      "value": "user@example.com",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "className": "",
                      "errors": Object {},
                      "inline": true,
                      "name": "email",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <div
                className="offset-sm-2 col-sm-10"
              >
                <SubmitButton
                  className="btn-default"
                  disabled={false}
                  disabledChildren="Saving"
                >
                  Save
                </SubmitButton>
                <FormSummary
                  className=""
                  errors={Object {}}
                  success="Email saved."
                />
              </div>,
              "className": "row",
              "name": "submit",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <SubmitButton
                    className="btn-default"
                    disabled={false}
                    disabledChildren="Saving"
                  >
                    Save
                  </SubmitButton>,
                  <FormSummary
                    className=""
                    errors={Object {}}
                    success="Email saved."
                  />,
                ],
                "className": "offset-sm-2 col-sm-10",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Save",
                    "className": "btn-default",
                    "disabled": false,
                    "disabledChildren": "Saving",
                  },
                  "ref": null,
                  "rendered": "Save",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "className": "",
                    "errors": Object {},
                    "success": "Email saved.",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
