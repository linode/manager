// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`profile/components/ChangePassword should render without error 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ChangePassword
    dispatch={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <Form
        analytics={
                Object {
                        "title": "Password Settings",
                      }
        }
        className=""
        noSubmitEvent={false}
        onSubmit={[Function]}
>
        <FormGroup
                className="row"
                errors={Object {}}
                name="password"
        >
                <label
                        className="col-sm-2 col-form-label"
                        htmlFor="password"
                >
                        New password
                </label>
                <div
                        className="col-sm-10"
                >
                        <PasswordInput
                                className=""
                                disabled={false}
                                id="password"
                                name="password"
                                onChange={[Function]}
                                passwordType="offline_fast_hashing_1e10_per_second"
                                value=""
                        />
                        <FormGroupError
                                className=""
                                errors={Object {}}
                                inline={true}
                                name="password"
                        />
                </div>
        </FormGroup>
        <FormGroup
                className="row"
                errors={Object {}}
                name="expires"
        >
                <label
                        className="col-sm-2 col-form-label"
                >
                        Expires
                </label>
                <div
                        className="col-sm-10"
                >
                        <SelectExpiration
                                id="expires"
                                name="expires"
                                onChange={[Function]}
                                value=""
                        />
                        <FormGroupError
                                className=""
                                errors={Object {}}
                                inline={true}
                                name="expires"
                        />
                </div>
        </FormGroup>
        <FormGroup
                className="row"
                name="submit"
        >
                <div
                        className="col-sm-10 offset-sm-2"
                >
                        <SubmitButton
                                className="btn-default"
                                disabled={false}
                                disabledChildren="Saving"
                        >
                                Save
                        </SubmitButton>
                        <FormSummary
                                className=""
                                errors={Object {}}
                                success="Password changed."
                        />
                </div>
        </FormGroup>
</Form>,
      "className": "",
      "header": <CardHeader
        title="Change password"
/>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "analytics": Object {
          "title": "Password Settings",
        },
        "children": Array [
          <FormGroup
            className="row"
            errors={Object {}}
            name="password"
>
            <label
                        className="col-sm-2 col-form-label"
                        htmlFor="password"
            >
                        New password
            </label>
            <div
                        className="col-sm-10"
            >
                        <PasswordInput
                                    className=""
                                    disabled={false}
                                    id="password"
                                    name="password"
                                    onChange={[Function]}
                                    passwordType="offline_fast_hashing_1e10_per_second"
                                    value=""
                        />
                        <FormGroupError
                                    className=""
                                    errors={Object {}}
                                    inline={true}
                                    name="password"
                        />
            </div>
</FormGroup>,
          <FormGroup
            className="row"
            errors={Object {}}
            name="expires"
>
            <label
                        className="col-sm-2 col-form-label"
            >
                        Expires
            </label>
            <div
                        className="col-sm-10"
            >
                        <SelectExpiration
                                    id="expires"
                                    name="expires"
                                    onChange={[Function]}
                                    value=""
                        />
                        <FormGroupError
                                    className=""
                                    errors={Object {}}
                                    inline={true}
                                    name="expires"
                        />
            </div>
</FormGroup>,
          <FormGroup
            className="row"
            name="submit"
>
            <div
                        className="col-sm-10 offset-sm-2"
            >
                        <SubmitButton
                                    className="btn-default"
                                    disabled={false}
                                    disabledChildren="Saving"
                        >
                                    Save
                        </SubmitButton>
                        <FormSummary
                                    className=""
                                    errors={Object {}}
                                    success="Password changed."
                        />
            </div>
</FormGroup>,
        ],
        "className": "",
        "noSubmitEvent": false,
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <label
                className="col-sm-2 col-form-label"
                htmlFor="password"
>
                New password
</label>,
              <div
                className="col-sm-10"
>
                <PasswordInput
                                className=""
                                disabled={false}
                                id="password"
                                name="password"
                                onChange={[Function]}
                                passwordType="offline_fast_hashing_1e10_per_second"
                                value=""
                />
                <FormGroupError
                                className=""
                                errors={Object {}}
                                inline={true}
                                name="password"
                />
</div>,
            ],
            "className": "row",
            "errors": Object {},
            "name": "password",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "New password",
                "className": "col-sm-2 col-form-label",
                "htmlFor": "password",
              },
              "ref": null,
              "rendered": "New password",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <PasswordInput
                    className=""
                    disabled={false}
                    id="password"
                    name="password"
                    onChange={[Function]}
                    passwordType="offline_fast_hashing_1e10_per_second"
                    value=""
/>,
                  <FormGroupError
                    className=""
                    errors={Object {}}
                    inline={true}
                    name="password"
/>,
                ],
                "className": "col-sm-10",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "className": "",
                    "disabled": false,
                    "id": "password",
                    "name": "password",
                    "onChange": [Function],
                    "passwordType": "offline_fast_hashing_1e10_per_second",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "className": "",
                    "errors": Object {},
                    "inline": true,
                    "name": "password",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <label
                className="col-sm-2 col-form-label"
>
                Expires
</label>,
              <div
                className="col-sm-10"
>
                <SelectExpiration
                                id="expires"
                                name="expires"
                                onChange={[Function]}
                                value=""
                />
                <FormGroupError
                                className=""
                                errors={Object {}}
                                inline={true}
                                name="expires"
                />
</div>,
            ],
            "className": "row",
            "errors": Object {},
            "name": "expires",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Expires",
                "className": "col-sm-2 col-form-label",
              },
              "ref": null,
              "rendered": "Expires",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <SelectExpiration
                    id="expires"
                    name="expires"
                    onChange={[Function]}
                    value=""
/>,
                  <FormGroupError
                    className=""
                    errors={Object {}}
                    inline={true}
                    name="expires"
/>,
                ],
                "className": "col-sm-10",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "id": "expires",
                    "name": "expires",
                    "onChange": [Function],
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "className": "",
                    "errors": Object {},
                    "inline": true,
                    "name": "expires",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <div
              className="col-sm-10 offset-sm-2"
>
              <SubmitButton
                            className="btn-default"
                            disabled={false}
                            disabledChildren="Saving"
              >
                            Save
              </SubmitButton>
              <FormSummary
                            className=""
                            errors={Object {}}
                            success="Password changed."
              />
</div>,
            "className": "row",
            "name": "submit",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <SubmitButton
                  className="btn-default"
                  disabled={false}
                  disabledChildren="Saving"
>
                  Save
</SubmitButton>,
                <FormSummary
                  className=""
                  errors={Object {}}
                  success="Password changed."
/>,
              ],
              "className": "col-sm-10 offset-sm-2",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Save",
                  "className": "btn-default",
                  "disabled": false,
                  "disabledChildren": "Saving",
                },
                "ref": null,
                "rendered": "Save",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "className": "",
                  "errors": Object {},
                  "success": "Password changed.",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Form
          analytics={
                    Object {
                              "title": "Password Settings",
                            }
          }
          className=""
          noSubmitEvent={false}
          onSubmit={[Function]}
>
          <FormGroup
                    className="row"
                    errors={Object {}}
                    name="password"
          >
                    <label
                              className="col-sm-2 col-form-label"
                              htmlFor="password"
                    >
                              New password
                    </label>
                    <div
                              className="col-sm-10"
                    >
                              <PasswordInput
                                        className=""
                                        disabled={false}
                                        id="password"
                                        name="password"
                                        onChange={[Function]}
                                        passwordType="offline_fast_hashing_1e10_per_second"
                                        value=""
                              />
                              <FormGroupError
                                        className=""
                                        errors={Object {}}
                                        inline={true}
                                        name="password"
                              />
                    </div>
          </FormGroup>
          <FormGroup
                    className="row"
                    errors={Object {}}
                    name="expires"
          >
                    <label
                              className="col-sm-2 col-form-label"
                    >
                              Expires
                    </label>
                    <div
                              className="col-sm-10"
                    >
                              <SelectExpiration
                                        id="expires"
                                        name="expires"
                                        onChange={[Function]}
                                        value=""
                              />
                              <FormGroupError
                                        className=""
                                        errors={Object {}}
                                        inline={true}
                                        name="expires"
                              />
                    </div>
          </FormGroup>
          <FormGroup
                    className="row"
                    name="submit"
          >
                    <div
                              className="col-sm-10 offset-sm-2"
                    >
                              <SubmitButton
                                        className="btn-default"
                                        disabled={false}
                                        disabledChildren="Saving"
                              >
                                        Save
                              </SubmitButton>
                              <FormSummary
                                        className=""
                                        errors={Object {}}
                                        success="Password changed."
                              />
                    </div>
          </FormGroup>
</Form>,
        "className": "",
        "header": <CardHeader
          title="Change password"
/>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "analytics": Object {
            "title": "Password Settings",
          },
          "children": Array [
            <FormGroup
              className="row"
              errors={Object {}}
              name="password"
>
              <label
                            className="col-sm-2 col-form-label"
                            htmlFor="password"
              >
                            New password
              </label>
              <div
                            className="col-sm-10"
              >
                            <PasswordInput
                                          className=""
                                          disabled={false}
                                          id="password"
                                          name="password"
                                          onChange={[Function]}
                                          passwordType="offline_fast_hashing_1e10_per_second"
                                          value=""
                            />
                            <FormGroupError
                                          className=""
                                          errors={Object {}}
                                          inline={true}
                                          name="password"
                            />
              </div>
</FormGroup>,
            <FormGroup
              className="row"
              errors={Object {}}
              name="expires"
>
              <label
                            className="col-sm-2 col-form-label"
              >
                            Expires
              </label>
              <div
                            className="col-sm-10"
              >
                            <SelectExpiration
                                          id="expires"
                                          name="expires"
                                          onChange={[Function]}
                                          value=""
                            />
                            <FormGroupError
                                          className=""
                                          errors={Object {}}
                                          inline={true}
                                          name="expires"
                            />
              </div>
</FormGroup>,
            <FormGroup
              className="row"
              name="submit"
>
              <div
                            className="col-sm-10 offset-sm-2"
              >
                            <SubmitButton
                                          className="btn-default"
                                          disabled={false}
                                          disabledChildren="Saving"
                            >
                                          Save
                            </SubmitButton>
                            <FormSummary
                                          className=""
                                          errors={Object {}}
                                          success="Password changed."
                            />
              </div>
</FormGroup>,
          ],
          "className": "",
          "noSubmitEvent": false,
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <label
                  className="col-sm-2 col-form-label"
                  htmlFor="password"
>
                  New password
</label>,
                <div
                  className="col-sm-10"
>
                  <PasswordInput
                                    className=""
                                    disabled={false}
                                    id="password"
                                    name="password"
                                    onChange={[Function]}
                                    passwordType="offline_fast_hashing_1e10_per_second"
                                    value=""
                  />
                  <FormGroupError
                                    className=""
                                    errors={Object {}}
                                    inline={true}
                                    name="password"
                  />
</div>,
              ],
              "className": "row",
              "errors": Object {},
              "name": "password",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "New password",
                  "className": "col-sm-2 col-form-label",
                  "htmlFor": "password",
                },
                "ref": null,
                "rendered": "New password",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <PasswordInput
                      className=""
                      disabled={false}
                      id="password"
                      name="password"
                      onChange={[Function]}
                      passwordType="offline_fast_hashing_1e10_per_second"
                      value=""
/>,
                    <FormGroupError
                      className=""
                      errors={Object {}}
                      inline={true}
                      name="password"
/>,
                  ],
                  "className": "col-sm-10",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "className": "",
                      "disabled": false,
                      "id": "password",
                      "name": "password",
                      "onChange": [Function],
                      "passwordType": "offline_fast_hashing_1e10_per_second",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "className": "",
                      "errors": Object {},
                      "inline": true,
                      "name": "password",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <label
                  className="col-sm-2 col-form-label"
>
                  Expires
</label>,
                <div
                  className="col-sm-10"
>
                  <SelectExpiration
                                    id="expires"
                                    name="expires"
                                    onChange={[Function]}
                                    value=""
                  />
                  <FormGroupError
                                    className=""
                                    errors={Object {}}
                                    inline={true}
                                    name="expires"
                  />
</div>,
              ],
              "className": "row",
              "errors": Object {},
              "name": "expires",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Expires",
                  "className": "col-sm-2 col-form-label",
                },
                "ref": null,
                "rendered": "Expires",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <SelectExpiration
                      id="expires"
                      name="expires"
                      onChange={[Function]}
                      value=""
/>,
                    <FormGroupError
                      className=""
                      errors={Object {}}
                      inline={true}
                      name="expires"
/>,
                  ],
                  "className": "col-sm-10",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "id": "expires",
                      "name": "expires",
                      "onChange": [Function],
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "className": "",
                      "errors": Object {},
                      "inline": true,
                      "name": "expires",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <div
                className="col-sm-10 offset-sm-2"
>
                <SubmitButton
                                className="btn-default"
                                disabled={false}
                                disabledChildren="Saving"
                >
                                Save
                </SubmitButton>
                <FormSummary
                                className=""
                                errors={Object {}}
                                success="Password changed."
                />
</div>,
              "className": "row",
              "name": "submit",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <SubmitButton
                    className="btn-default"
                    disabled={false}
                    disabledChildren="Saving"
>
                    Save
</SubmitButton>,
                  <FormSummary
                    className=""
                    errors={Object {}}
                    success="Password changed."
/>,
                ],
                "className": "col-sm-10 offset-sm-2",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Save",
                    "className": "btn-default",
                    "disabled": false,
                    "disabledChildren": "Saving",
                  },
                  "ref": null,
                  "rendered": "Save",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "className": "",
                    "errors": Object {},
                    "success": "Password changed.",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
