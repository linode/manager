// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/Header should render without error 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    dispatch={[Function]}
    email="peanut@gmail.com"
    events={
        Object {
            "events": Object {
              "385": Object {
                "action": "linode_reboot",
                "created": "2016-11-21T20:03:40",
                "entity": Object {
                  "label": "linode-www2",
                },
                "finished": null,
                "id": 385,
                "label_message": "",
                "linode_id": 1237,
                "nodebalancer_id": null,
                "percent_complete": 100,
                "read": false,
                "seen": false,
                "stackscript_id": null,
                "status": "finished",
                "updated": "2016-11-21T20:03:40",
              },
              "386": Object {
                "action": "linode_reboot",
                "created": "2016-11-21T20:03:40",
                "entity": Object {
                  "label": "linode-www2",
                },
                "finished": null,
                "id": 386,
                "label_message": "",
                "linode_id": 1237,
                "nodebalancer_id": null,
                "percent_complete": 100,
                "read": true,
                "seen": false,
                "stackscript_id": null,
                "status": "finished",
                "updated": "2016-11-21T20:12:40",
              },
              "387": Object {
                "action": "linode_shutdown",
                "created": "2016-11-21T20:03:40",
                "entity": Object {
                  "label": "linode-www2",
                },
                "finished": null,
                "id": 385,
                "label_message": "",
                "linode_id": 1237,
                "nodebalancer_id": null,
                "percent_complete": 100,
                "read": false,
                "seen": false,
                "stackscript_id": null,
                "status": "finished",
                "updated": "2016-11-21T20:03:40",
              },
              "388": Object {
                "action": "linode_boot",
                "created": "2016-11-21T20:03:40",
                "entity": Object {
                  "label": "linode-www2",
                },
                "finished": null,
                "id": 385,
                "label_message": "",
                "linode_id": 1237,
                "nodebalancer_id": null,
                "percent_complete": 100,
                "read": false,
                "seen": false,
                "stackscript_id": null,
                "status": "finished",
                "updated": "2016-11-21T20:03:40",
              },
            },
            "ids": Array [
              385,
              386,
              385,
              385,
            ],
            "pagesFetched": Array [
              1,
            ],
            "plural": "events",
            "singular": "event",
            "totalPages": 1,
            "totalResults": 4,
          }
    }
    notifications={
        Object {
            "open": false,
          }
    }
    session={
        Object {
            "open": false,
          }
    }
    username="peanut"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div
          className="MainHeader-brand"
>
          <Link
                    onlyActiveOnIndex={false}
                    style={Object {}}
                    to="/"
          >
                    <span
                              className="MainHeader-logo"
                    >
                              <img
                                        alt="Linode Logo"
                                        height={40}
                                        src="logo.svg"
                                        width={35}
                              />
                    </span>
          </Link>
</div>,
        <renderLink
          alsoHighlightOn={
                    Array [
                              "/stackscripts",
                              "/volumes",
                              "/images",
                            ]
          }
          label="Linodes"
          to="/linodes"
/>,
        <renderLink
          label="NodeBalancers"
          to="/nodebalancers"
/>,
        <renderLink
          label="Domains"
          to="/domains"
/>,
        <renderLink
          label="Support"
          to="/support"
/>,
        <div
          className="MainHeader-session"
          onClick={[Function]}
>
          <span
                    className="MainHeader-username"
          >
                    peanut
          </span>
          <img
                    alt="User Avatar"
                    className="MainHeader-gravatar"
                    height={35}
                    src="https://gravatar.com/avatar/3567f505ca6767e0bef9249fbb3cf990"
                    width={35}
          />
</div>,
        <div
          className="MainHeader-notifications"
          onClick={[Function]}
>
          <i
                    className="fa fa-bell-o"
          />
          <span
                    className="MainHeader-badge Badge"
          >
                    4
          </span>
</div>,
      ],
      "contextHeader": undefined,
      "infoHeader": <div
        className="MiniHeader-text"
>
        This is the early-access Linode Manager. Click 
        <a
                href="https://manager.linode.com"
        >
                here
        </a>
         to go back to the classic Linode Manager.
</div>,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Link
            onlyActiveOnIndex={false}
            style={Object {}}
            to="/"
>
            <span
                        className="MainHeader-logo"
            >
                        <img
                                    alt="Linode Logo"
                                    height={40}
                                    src="logo.svg"
                                    width={35}
                        />
            </span>
</Link>,
          "className": "MainHeader-brand",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <span
              className="MainHeader-logo"
>
              <img
                            alt="Linode Logo"
                            height={40}
                            src="logo.svg"
                            width={35}
              />
</span>,
            "onlyActiveOnIndex": false,
            "style": Object {},
            "to": "/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt="Linode Logo"
                height={40}
                src="logo.svg"
                width={35}
/>,
              "className": "MainHeader-logo",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Linode Logo",
                "height": 40,
                "src": "logo.svg",
                "width": 35,
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "span",
          },
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "alsoHighlightOn": Array [
            "/stackscripts",
            "/volumes",
            "/images",
          ],
          "label": "Linodes",
          "to": "/linodes",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "label": "NodeBalancers",
          "to": "/nodebalancers",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "label": "Domains",
          "to": "/domains",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "label": "Support",
          "to": "/support",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="MainHeader-username"
>
              peanut
</span>,
            <img
              alt="User Avatar"
              className="MainHeader-gravatar"
              height={35}
              src="https://gravatar.com/avatar/3567f505ca6767e0bef9249fbb3cf990"
              width={35}
/>,
          ],
          "className": "MainHeader-session",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "peanut",
              "className": "MainHeader-username",
            },
            "ref": null,
            "rendered": "peanut",
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "User Avatar",
              "className": "MainHeader-gravatar",
              "height": 35,
              "src": "https://gravatar.com/avatar/3567f505ca6767e0bef9249fbb3cf990",
              "width": 35,
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <i
              className="fa fa-bell-o"
/>,
            <span
              className="MainHeader-badge Badge"
>
              4
</span>,
          ],
          "className": "MainHeader-notifications",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fa fa-bell-o",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": 4,
              "className": "MainHeader-badge Badge",
            },
            "ref": null,
            "rendered": 4,
            "type": "span",
          },
        ],
        "type": "div",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="MainHeader-brand"
>
            <Link
                        onlyActiveOnIndex={false}
                        style={Object {}}
                        to="/"
            >
                        <span
                                    className="MainHeader-logo"
                        >
                                    <img
                                                alt="Linode Logo"
                                                height={40}
                                                src="logo.svg"
                                                width={35}
                                    />
                        </span>
            </Link>
</div>,
          <renderLink
            alsoHighlightOn={
                        Array [
                                    "/stackscripts",
                                    "/volumes",
                                    "/images",
                                  ]
            }
            label="Linodes"
            to="/linodes"
/>,
          <renderLink
            label="NodeBalancers"
            to="/nodebalancers"
/>,
          <renderLink
            label="Domains"
            to="/domains"
/>,
          <renderLink
            label="Support"
            to="/support"
/>,
          <div
            className="MainHeader-session"
            onClick={[Function]}
>
            <span
                        className="MainHeader-username"
            >
                        peanut
            </span>
            <img
                        alt="User Avatar"
                        className="MainHeader-gravatar"
                        height={35}
                        src="https://gravatar.com/avatar/3567f505ca6767e0bef9249fbb3cf990"
                        width={35}
            />
</div>,
          <div
            className="MainHeader-notifications"
            onClick={[Function]}
>
            <i
                        className="fa fa-bell-o"
            />
            <span
                        className="MainHeader-badge Badge"
            >
                        4
            </span>
</div>,
        ],
        "contextHeader": undefined,
        "infoHeader": <div
          className="MiniHeader-text"
>
          This is the early-access Linode Manager. Click 
          <a
                    href="https://manager.linode.com"
          >
                    here
          </a>
           to go back to the classic Linode Manager.
</div>,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Link
              onlyActiveOnIndex={false}
              style={Object {}}
              to="/"
>
              <span
                            className="MainHeader-logo"
              >
                            <img
                                          alt="Linode Logo"
                                          height={40}
                                          src="logo.svg"
                                          width={35}
                            />
              </span>
</Link>,
            "className": "MainHeader-brand",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <span
                className="MainHeader-logo"
>
                <img
                                alt="Linode Logo"
                                height={40}
                                src="logo.svg"
                                width={35}
                />
</span>,
              "onlyActiveOnIndex": false,
              "style": Object {},
              "to": "/",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <img
                  alt="Linode Logo"
                  height={40}
                  src="logo.svg"
                  width={35}
/>,
                "className": "MainHeader-logo",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Linode Logo",
                  "height": 40,
                  "src": "logo.svg",
                  "width": 35,
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": "span",
            },
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "alsoHighlightOn": Array [
              "/stackscripts",
              "/volumes",
              "/images",
            ],
            "label": "Linodes",
            "to": "/linodes",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "label": "NodeBalancers",
            "to": "/nodebalancers",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "label": "Domains",
            "to": "/domains",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "label": "Support",
            "to": "/support",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="MainHeader-username"
>
                peanut
</span>,
              <img
                alt="User Avatar"
                className="MainHeader-gravatar"
                height={35}
                src="https://gravatar.com/avatar/3567f505ca6767e0bef9249fbb3cf990"
                width={35}
/>,
            ],
            "className": "MainHeader-session",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "peanut",
                "className": "MainHeader-username",
              },
              "ref": null,
              "rendered": "peanut",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "User Avatar",
                "className": "MainHeader-gravatar",
                "height": 35,
                "src": "https://gravatar.com/avatar/3567f505ca6767e0bef9249fbb3cf990",
                "width": 35,
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <i
                className="fa fa-bell-o"
/>,
              <span
                className="MainHeader-badge Badge"
>
                4
</span>,
            ],
            "className": "MainHeader-notifications",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fa fa-bell-o",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": 4,
                "className": "MainHeader-badge Badge",
              },
              "ref": null,
              "rendered": 4,
              "type": "span",
            },
          ],
          "type": "div",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
