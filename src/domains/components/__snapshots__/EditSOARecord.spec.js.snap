// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`domains/components/EditSOARecord should render without error 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditSOARecord
    close={[Function]}
    dispatch={[Function]}
    domains={
        Object {
            "_polling": false,
            "_records": Object {
              "records": Object {
                "1": Object {
                  "id": 1,
                  "name": "sub1",
                  "port": 80,
                  "priority": 10,
                  "protocol": null,
                  "service": null,
                  "target": "4.4.4.4",
                  "ttl_sec": 0,
                  "type": "A",
                  "weight": 5,
                },
                "2": Object {
                  "id": 2,
                  "name": "sub2",
                  "port": 80,
                  "priority": 10,
                  "protocol": null,
                  "service": null,
                  "target": "sub1.example.com",
                  "ttl_sec": 0,
                  "type": "CNAME",
                  "weight": 5,
                },
                "3": Object {
                  "id": 3,
                  "name": "",
                  "port": 0,
                  "priority": 10,
                  "protocol": null,
                  "service": null,
                  "target": "mail1.example.com",
                  "ttl_sec": 0,
                  "type": "MX",
                  "weight": 0,
                },
                "4": Object {
                  "id": 4,
                  "name": "",
                  "port": 0,
                  "priority": 0,
                  "protocol": null,
                  "service": null,
                  "target": "ns5.linode.com",
                  "ttl_sec": 0,
                  "type": "NS",
                  "weight": 0,
                },
                "5": Object {
                  "id": 5,
                  "name": "key",
                  "port": 80,
                  "priority": 10,
                  "protocol": null,
                  "service": null,
                  "target": "value",
                  "ttl_sec": 0,
                  "type": "TXT",
                  "weight": 5,
                },
                "6": Object {
                  "id": 6,
                  "name": "_sip",
                  "port": 80,
                  "priority": 10,
                  "protocol": "_tcp",
                  "service": "_sip",
                  "target": "ns1.service.com",
                  "ttl_sec": 0,
                  "type": "SRV",
                  "weight": 5,
                },
                "7": Object {
                  "id": 7,
                  "name": "www.mywebsite.com",
                  "tag": "issue",
                  "target": "certsign.ro",
                  "ttl_sec": 0,
                  "type": "CAA",
                },
              },
            },
            "axfr_ips": Array [
              "44.55.66.77",
            ],
            "description": "Example Description",
            "domain": "example.com",
            "expire_sec": 604800,
            "group": "Example Display Group",
            "id": 1,
            "master_ips": Array [
              "127.0.0.1",
              "255.255.255.1",
              "123.123.123.7",
            ],
            "refresh_sec": 14400,
            "retry_sec": 3600,
            "soa_email": "admin@example.com",
            "status": "active",
            "ttl_sec": 3600,
            "type": "master",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "analytics": Object {
        "title": "Edit SOA Record",
      },
      "buttonDisabledText": "Saving",
      "buttonText": "Save",
      "children": <div>
        <ModalFormGroup
                apiKey="domain"
                errors={Object {}}
                id="domain"
                label="Primary Domain"
        >
                <Input
                        className=""
                        id="domain"
                        name="domain"
                        onChange={[Function]}
                        placeholder="domain.com"
                        value="example.com"
                />
        </ModalFormGroup>
        <ModalFormGroup
                apiKey="group"
                description="Domains are grouped together on the Domain list page"
                errors={Object {}}
                id="group"
                label="Group"
        >
                <Input
                        className=""
                        id="group"
                        name="group"
                        onChange={[Function]}
                        placeholder=""
                        value="Example Display Group"
                />
        </ModalFormGroup>
        <ModalFormGroup
                apiKey="axfr_ips"
                description="The IP addresses allowed to AXFR this entire zone. Semicolon delimited. (maximum: 6)"
                errors={Object {}}
                id="axfrIps"
                label="Domain Transfers"
                name="axfr_ips"
        >
                <Textarea
                        className=""
                        id="axfrIps"
                        name="axfrIps"
                        onChange={[Function]}
                        placeholder="172.92.1.4;209.124.103.15"
                        value="44.55.66.77"
                />
        </ModalFormGroup>
        <span>
                <ModalFormGroup
                        apiKey="soa_email"
                        description="Email address of the Domain administrator"
                        errors={Object {}}
                        id="email"
                        label="Email"
                >
                        <Input
                                className=""
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="admin@domain.com"
                                type="email"
                                value="admin@example.com"
                        />
                </ModalFormGroup>
                <ModalFormGroup
                        apiKey="status"
                        errors={Object {}}
                        id="status"
                        label="Status"
                >
                        <Select
                                analytics={
                                        Object {
                                                "noTrack": false,
                                              }
                                }
                                className=""
                                id="status"
                                name="status"
                                onChange={[Function]}
                                options={
                                        Array [
                                                Object {
                                                  "label": "Active (turn on serving of this domain)",
                                                  "value": "active",
                                                },
                                                Object {
                                                  "label": "Disabled (turn off serving of this domain)",
                                                  "value": "disabled",
                                                },
                                                Object {
                                                  "label": "Edit Mode (use while making edits)",
                                                  "value": "edit_mode",
                                                },
                                              ]
                                }
                                value="active"
                        />
                </ModalFormGroup>
                <h3
                        className="sub-header"
                >
                        Advanced
                </h3>
                <ModalFormGroup
                        apiKey="ttl_sec"
                        description="The default Time To Live for all entries in the Domain"
                        errors={Object {}}
                        id="defaultTTL"
                        label="Default TTL"
                >
                        <SelectDNSSeconds
                                id="defaultTTL"
                                name="defaultTTL"
                                onChange={[Function]}
                                value={3600}
                        />
                </ModalFormGroup>
                <ModalFormGroup
                        apiKey="refresh_sec"
                        description="How often secondary (slave) nameservers check with the master for updates"
                        errors={Object {}}
                        id="refreshRate"
                        label="Refresh Rate"
                >
                        <SelectDNSSeconds
                                id="refreshRate"
                                name="refreshRate"
                                onChange={[Function]}
                                value={14400}
                        />
                </ModalFormGroup>
                <ModalFormGroup
                        apiKey="retry_sec"
                        description="How long secondary (slave) nameservers wait to contact the master nameserver again if the last attempt failed"
                        errors={Object {}}
                        id="retryRate"
                        label="Retry Rate"
                >
                        <SelectDNSSeconds
                                id="retryRate"
                                name="retryRate"
                                onChange={[Function]}
                                value={3600}
                        />
                </ModalFormGroup>
                <ModalFormGroup
                        apiKey="expire_sec"
                        description="How long secondary (slave) nameservers wait before considering DNS data stale if it cannot reach the master nameserver"
                        errors={Object {}}
                        id="expireTime"
                        label="Expire Time"
                >
                        <Select
                                analytics={
                                        Object {
                                                "noTrack": false,
                                              }
                                }
                                className=""
                                id="expireTime"
                                name="expireTime"
                                onChange={[Function]}
                                options={
                                        Array [
                                                Object {
                                                  "label": "Default (1 week)",
                                                  "value": 604800,
                                                },
                                                Object {
                                                  "label": "1209600 (2 weeks)",
                                                  "value": 1209600,
                                                },
                                                Object {
                                                  "label": "2419200 (4 weeks)",
                                                  "value": 2419200,
                                                },
                                              ]
                                }
                                value={604800}
                        />
                </ModalFormGroup>
        </span>
</div>,
      "errors": Object {},
      "noCancel": false,
      "noCancelEvent": false,
      "noSubmit": false,
      "onCancel": [Function],
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ModalFormGroup
            apiKey="domain"
            errors={Object {}}
            id="domain"
            label="Primary Domain"
>
            <Input
                        className=""
                        id="domain"
                        name="domain"
                        onChange={[Function]}
                        placeholder="domain.com"
                        value="example.com"
            />
</ModalFormGroup>,
          <ModalFormGroup
            apiKey="group"
            description="Domains are grouped together on the Domain list page"
            errors={Object {}}
            id="group"
            label="Group"
>
            <Input
                        className=""
                        id="group"
                        name="group"
                        onChange={[Function]}
                        placeholder=""
                        value="Example Display Group"
            />
</ModalFormGroup>,
          null,
          <ModalFormGroup
            apiKey="axfr_ips"
            description="The IP addresses allowed to AXFR this entire zone. Semicolon delimited. (maximum: 6)"
            errors={Object {}}
            id="axfrIps"
            label="Domain Transfers"
            name="axfr_ips"
>
            <Textarea
                        className=""
                        id="axfrIps"
                        name="axfrIps"
                        onChange={[Function]}
                        placeholder="172.92.1.4;209.124.103.15"
                        value="44.55.66.77"
            />
</ModalFormGroup>,
          <span>
            <ModalFormGroup
                        apiKey="soa_email"
                        description="Email address of the Domain administrator"
                        errors={Object {}}
                        id="email"
                        label="Email"
            >
                        <Input
                                    className=""
                                    id="email"
                                    name="email"
                                    onChange={[Function]}
                                    placeholder="admin@domain.com"
                                    type="email"
                                    value="admin@example.com"
                        />
            </ModalFormGroup>
            <ModalFormGroup
                        apiKey="status"
                        errors={Object {}}
                        id="status"
                        label="Status"
            >
                        <Select
                                    analytics={
                                                Object {
                                                            "noTrack": false,
                                                          }
                                    }
                                    className=""
                                    id="status"
                                    name="status"
                                    onChange={[Function]}
                                    options={
                                                Array [
                                                            Object {
                                                              "label": "Active (turn on serving of this domain)",
                                                              "value": "active",
                                                            },
                                                            Object {
                                                              "label": "Disabled (turn off serving of this domain)",
                                                              "value": "disabled",
                                                            },
                                                            Object {
                                                              "label": "Edit Mode (use while making edits)",
                                                              "value": "edit_mode",
                                                            },
                                                          ]
                                    }
                                    value="active"
                        />
            </ModalFormGroup>
            <h3
                        className="sub-header"
            >
                        Advanced
            </h3>
            <ModalFormGroup
                        apiKey="ttl_sec"
                        description="The default Time To Live for all entries in the Domain"
                        errors={Object {}}
                        id="defaultTTL"
                        label="Default TTL"
            >
                        <SelectDNSSeconds
                                    id="defaultTTL"
                                    name="defaultTTL"
                                    onChange={[Function]}
                                    value={3600}
                        />
            </ModalFormGroup>
            <ModalFormGroup
                        apiKey="refresh_sec"
                        description="How often secondary (slave) nameservers check with the master for updates"
                        errors={Object {}}
                        id="refreshRate"
                        label="Refresh Rate"
            >
                        <SelectDNSSeconds
                                    id="refreshRate"
                                    name="refreshRate"
                                    onChange={[Function]}
                                    value={14400}
                        />
            </ModalFormGroup>
            <ModalFormGroup
                        apiKey="retry_sec"
                        description="How long secondary (slave) nameservers wait to contact the master nameserver again if the last attempt failed"
                        errors={Object {}}
                        id="retryRate"
                        label="Retry Rate"
            >
                        <SelectDNSSeconds
                                    id="retryRate"
                                    name="retryRate"
                                    onChange={[Function]}
                                    value={3600}
                        />
            </ModalFormGroup>
            <ModalFormGroup
                        apiKey="expire_sec"
                        description="How long secondary (slave) nameservers wait before considering DNS data stale if it cannot reach the master nameserver"
                        errors={Object {}}
                        id="expireTime"
                        label="Expire Time"
            >
                        <Select
                                    analytics={
                                                Object {
                                                            "noTrack": false,
                                                          }
                                    }
                                    className=""
                                    id="expireTime"
                                    name="expireTime"
                                    onChange={[Function]}
                                    options={
                                                Array [
                                                            Object {
                                                              "label": "Default (1 week)",
                                                              "value": 604800,
                                                            },
                                                            Object {
                                                              "label": "1209600 (2 weeks)",
                                                              "value": 1209600,
                                                            },
                                                            Object {
                                                              "label": "2419200 (4 weeks)",
                                                              "value": 2419200,
                                                            },
                                                          ]
                                    }
                                    value={604800}
                        />
            </ModalFormGroup>
</span>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "apiKey": "domain",
            "children": <Input
              className=""
              id="domain"
              name="domain"
              onChange={[Function]}
              placeholder="domain.com"
              value="example.com"
/>,
            "errors": Object {},
            "id": "domain",
            "label": "Primary Domain",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "",
              "id": "domain",
              "name": "domain",
              "onChange": [Function],
              "placeholder": "domain.com",
              "value": "example.com",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "apiKey": "group",
            "children": <Input
              className=""
              id="group"
              name="group"
              onChange={[Function]}
              placeholder=""
              value="Example Display Group"
/>,
            "description": "Domains are grouped together on the Domain list page",
            "errors": Object {},
            "id": "group",
            "label": "Group",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "",
              "id": "group",
              "name": "group",
              "onChange": [Function],
              "placeholder": "",
              "value": "Example Display Group",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "apiKey": "axfr_ips",
            "children": <Textarea
              className=""
              id="axfrIps"
              name="axfrIps"
              onChange={[Function]}
              placeholder="172.92.1.4;209.124.103.15"
              value="44.55.66.77"
/>,
            "description": "The IP addresses allowed to AXFR this entire zone. Semicolon delimited. (maximum: 6)",
            "errors": Object {},
            "id": "axfrIps",
            "label": "Domain Transfers",
            "name": "axfr_ips",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "",
              "id": "axfrIps",
              "name": "axfrIps",
              "onChange": [Function],
              "placeholder": "172.92.1.4;209.124.103.15",
              "value": "44.55.66.77",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <ModalFormGroup
                apiKey="soa_email"
                description="Email address of the Domain administrator"
                errors={Object {}}
                id="email"
                label="Email"
>
                <Input
                                className=""
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="admin@domain.com"
                                type="email"
                                value="admin@example.com"
                />
</ModalFormGroup>,
              <ModalFormGroup
                apiKey="status"
                errors={Object {}}
                id="status"
                label="Status"
>
                <Select
                                analytics={
                                                Object {
                                                                "noTrack": false,
                                                              }
                                }
                                className=""
                                id="status"
                                name="status"
                                onChange={[Function]}
                                options={
                                                Array [
                                                                Object {
                                                                  "label": "Active (turn on serving of this domain)",
                                                                  "value": "active",
                                                                },
                                                                Object {
                                                                  "label": "Disabled (turn off serving of this domain)",
                                                                  "value": "disabled",
                                                                },
                                                                Object {
                                                                  "label": "Edit Mode (use while making edits)",
                                                                  "value": "edit_mode",
                                                                },
                                                              ]
                                }
                                value="active"
                />
</ModalFormGroup>,
              <h3
                className="sub-header"
>
                Advanced
</h3>,
              <ModalFormGroup
                apiKey="ttl_sec"
                description="The default Time To Live for all entries in the Domain"
                errors={Object {}}
                id="defaultTTL"
                label="Default TTL"
>
                <SelectDNSSeconds
                                id="defaultTTL"
                                name="defaultTTL"
                                onChange={[Function]}
                                value={3600}
                />
</ModalFormGroup>,
              <ModalFormGroup
                apiKey="refresh_sec"
                description="How often secondary (slave) nameservers check with the master for updates"
                errors={Object {}}
                id="refreshRate"
                label="Refresh Rate"
>
                <SelectDNSSeconds
                                id="refreshRate"
                                name="refreshRate"
                                onChange={[Function]}
                                value={14400}
                />
</ModalFormGroup>,
              <ModalFormGroup
                apiKey="retry_sec"
                description="How long secondary (slave) nameservers wait to contact the master nameserver again if the last attempt failed"
                errors={Object {}}
                id="retryRate"
                label="Retry Rate"
>
                <SelectDNSSeconds
                                id="retryRate"
                                name="retryRate"
                                onChange={[Function]}
                                value={3600}
                />
</ModalFormGroup>,
              <ModalFormGroup
                apiKey="expire_sec"
                description="How long secondary (slave) nameservers wait before considering DNS data stale if it cannot reach the master nameserver"
                errors={Object {}}
                id="expireTime"
                label="Expire Time"
>
                <Select
                                analytics={
                                                Object {
                                                                "noTrack": false,
                                                              }
                                }
                                className=""
                                id="expireTime"
                                name="expireTime"
                                onChange={[Function]}
                                options={
                                                Array [
                                                                Object {
                                                                  "label": "Default (1 week)",
                                                                  "value": 604800,
                                                                },
                                                                Object {
                                                                  "label": "1209600 (2 weeks)",
                                                                  "value": 1209600,
                                                                },
                                                                Object {
                                                                  "label": "2419200 (4 weeks)",
                                                                  "value": 2419200,
                                                                },
                                                              ]
                                }
                                value={604800}
                />
</ModalFormGroup>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "apiKey": "soa_email",
                "children": <Input
                  className=""
                  id="email"
                  name="email"
                  onChange={[Function]}
                  placeholder="admin@domain.com"
                  type="email"
                  value="admin@example.com"
/>,
                "description": "Email address of the Domain administrator",
                "errors": Object {},
                "id": "email",
                "label": "Email",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "className": "",
                  "id": "email",
                  "name": "email",
                  "onChange": [Function],
                  "placeholder": "admin@domain.com",
                  "type": "email",
                  "value": "admin@example.com",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "apiKey": "status",
                "children": <Select
                  analytics={
                                    Object {
                                                      "noTrack": false,
                                                    }
                  }
                  className=""
                  id="status"
                  name="status"
                  onChange={[Function]}
                  options={
                                    Array [
                                                      Object {
                                                        "label": "Active (turn on serving of this domain)",
                                                        "value": "active",
                                                      },
                                                      Object {
                                                        "label": "Disabled (turn off serving of this domain)",
                                                        "value": "disabled",
                                                      },
                                                      Object {
                                                        "label": "Edit Mode (use while making edits)",
                                                        "value": "edit_mode",
                                                      },
                                                    ]
                  }
                  value="active"
/>,
                "errors": Object {},
                "id": "status",
                "label": "Status",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "analytics": Object {
                    "noTrack": false,
                  },
                  "className": "",
                  "id": "status",
                  "name": "status",
                  "onChange": [Function],
                  "options": Array [
                    Object {
                      "label": "Active (turn on serving of this domain)",
                      "value": "active",
                    },
                    Object {
                      "label": "Disabled (turn off serving of this domain)",
                      "value": "disabled",
                    },
                    Object {
                      "label": "Edit Mode (use while making edits)",
                      "value": "edit_mode",
                    },
                  ],
                  "value": "active",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Advanced",
                "className": "sub-header",
              },
              "ref": null,
              "rendered": "Advanced",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "apiKey": "ttl_sec",
                "children": <SelectDNSSeconds
                  id="defaultTTL"
                  name="defaultTTL"
                  onChange={[Function]}
                  value={3600}
/>,
                "description": "The default Time To Live for all entries in the Domain",
                "errors": Object {},
                "id": "defaultTTL",
                "label": "Default TTL",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "id": "defaultTTL",
                  "name": "defaultTTL",
                  "onChange": [Function],
                  "value": 3600,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "apiKey": "refresh_sec",
                "children": <SelectDNSSeconds
                  id="refreshRate"
                  name="refreshRate"
                  onChange={[Function]}
                  value={14400}
/>,
                "description": "How often secondary (slave) nameservers check with the master for updates",
                "errors": Object {},
                "id": "refreshRate",
                "label": "Refresh Rate",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "id": "refreshRate",
                  "name": "refreshRate",
                  "onChange": [Function],
                  "value": 14400,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "apiKey": "retry_sec",
                "children": <SelectDNSSeconds
                  id="retryRate"
                  name="retryRate"
                  onChange={[Function]}
                  value={3600}
/>,
                "description": "How long secondary (slave) nameservers wait to contact the master nameserver again if the last attempt failed",
                "errors": Object {},
                "id": "retryRate",
                "label": "Retry Rate",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "id": "retryRate",
                  "name": "retryRate",
                  "onChange": [Function],
                  "value": 3600,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "apiKey": "expire_sec",
                "children": <Select
                  analytics={
                                    Object {
                                                      "noTrack": false,
                                                    }
                  }
                  className=""
                  id="expireTime"
                  name="expireTime"
                  onChange={[Function]}
                  options={
                                    Array [
                                                      Object {
                                                        "label": "Default (1 week)",
                                                        "value": 604800,
                                                      },
                                                      Object {
                                                        "label": "1209600 (2 weeks)",
                                                        "value": 1209600,
                                                      },
                                                      Object {
                                                        "label": "2419200 (4 weeks)",
                                                        "value": 2419200,
                                                      },
                                                    ]
                  }
                  value={604800}
/>,
                "description": "How long secondary (slave) nameservers wait before considering DNS data stale if it cannot reach the master nameserver",
                "errors": Object {},
                "id": "expireTime",
                "label": "Expire Time",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "analytics": Object {
                    "noTrack": false,
                  },
                  "className": "",
                  "id": "expireTime",
                  "name": "expireTime",
                  "onChange": [Function],
                  "options": Array [
                    Object {
                      "label": "Default (1 week)",
                      "value": 604800,
                    },
                    Object {
                      "label": "1209600 (2 weeks)",
                      "value": 1209600,
                    },
                    Object {
                      "label": "2419200 (4 weeks)",
                      "value": 2419200,
                    },
                  ],
                  "value": 604800,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": "span",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "analytics": Object {
          "title": "Edit SOA Record",
        },
        "buttonDisabledText": "Saving",
        "buttonText": "Save",
        "children": <div>
          <ModalFormGroup
                    apiKey="domain"
                    errors={Object {}}
                    id="domain"
                    label="Primary Domain"
          >
                    <Input
                              className=""
                              id="domain"
                              name="domain"
                              onChange={[Function]}
                              placeholder="domain.com"
                              value="example.com"
                    />
          </ModalFormGroup>
          <ModalFormGroup
                    apiKey="group"
                    description="Domains are grouped together on the Domain list page"
                    errors={Object {}}
                    id="group"
                    label="Group"
          >
                    <Input
                              className=""
                              id="group"
                              name="group"
                              onChange={[Function]}
                              placeholder=""
                              value="Example Display Group"
                    />
          </ModalFormGroup>
          <ModalFormGroup
                    apiKey="axfr_ips"
                    description="The IP addresses allowed to AXFR this entire zone. Semicolon delimited. (maximum: 6)"
                    errors={Object {}}
                    id="axfrIps"
                    label="Domain Transfers"
                    name="axfr_ips"
          >
                    <Textarea
                              className=""
                              id="axfrIps"
                              name="axfrIps"
                              onChange={[Function]}
                              placeholder="172.92.1.4;209.124.103.15"
                              value="44.55.66.77"
                    />
          </ModalFormGroup>
          <span>
                    <ModalFormGroup
                              apiKey="soa_email"
                              description="Email address of the Domain administrator"
                              errors={Object {}}
                              id="email"
                              label="Email"
                    >
                              <Input
                                        className=""
                                        id="email"
                                        name="email"
                                        onChange={[Function]}
                                        placeholder="admin@domain.com"
                                        type="email"
                                        value="admin@example.com"
                              />
                    </ModalFormGroup>
                    <ModalFormGroup
                              apiKey="status"
                              errors={Object {}}
                              id="status"
                              label="Status"
                    >
                              <Select
                                        analytics={
                                                  Object {
                                                            "noTrack": false,
                                                          }
                                        }
                                        className=""
                                        id="status"
                                        name="status"
                                        onChange={[Function]}
                                        options={
                                                  Array [
                                                            Object {
                                                              "label": "Active (turn on serving of this domain)",
                                                              "value": "active",
                                                            },
                                                            Object {
                                                              "label": "Disabled (turn off serving of this domain)",
                                                              "value": "disabled",
                                                            },
                                                            Object {
                                                              "label": "Edit Mode (use while making edits)",
                                                              "value": "edit_mode",
                                                            },
                                                          ]
                                        }
                                        value="active"
                              />
                    </ModalFormGroup>
                    <h3
                              className="sub-header"
                    >
                              Advanced
                    </h3>
                    <ModalFormGroup
                              apiKey="ttl_sec"
                              description="The default Time To Live for all entries in the Domain"
                              errors={Object {}}
                              id="defaultTTL"
                              label="Default TTL"
                    >
                              <SelectDNSSeconds
                                        id="defaultTTL"
                                        name="defaultTTL"
                                        onChange={[Function]}
                                        value={3600}
                              />
                    </ModalFormGroup>
                    <ModalFormGroup
                              apiKey="refresh_sec"
                              description="How often secondary (slave) nameservers check with the master for updates"
                              errors={Object {}}
                              id="refreshRate"
                              label="Refresh Rate"
                    >
                              <SelectDNSSeconds
                                        id="refreshRate"
                                        name="refreshRate"
                                        onChange={[Function]}
                                        value={14400}
                              />
                    </ModalFormGroup>
                    <ModalFormGroup
                              apiKey="retry_sec"
                              description="How long secondary (slave) nameservers wait to contact the master nameserver again if the last attempt failed"
                              errors={Object {}}
                              id="retryRate"
                              label="Retry Rate"
                    >
                              <SelectDNSSeconds
                                        id="retryRate"
                                        name="retryRate"
                                        onChange={[Function]}
                                        value={3600}
                              />
                    </ModalFormGroup>
                    <ModalFormGroup
                              apiKey="expire_sec"
                              description="How long secondary (slave) nameservers wait before considering DNS data stale if it cannot reach the master nameserver"
                              errors={Object {}}
                              id="expireTime"
                              label="Expire Time"
                    >
                              <Select
                                        analytics={
                                                  Object {
                                                            "noTrack": false,
                                                          }
                                        }
                                        className=""
                                        id="expireTime"
                                        name="expireTime"
                                        onChange={[Function]}
                                        options={
                                                  Array [
                                                            Object {
                                                              "label": "Default (1 week)",
                                                              "value": 604800,
                                                            },
                                                            Object {
                                                              "label": "1209600 (2 weeks)",
                                                              "value": 1209600,
                                                            },
                                                            Object {
                                                              "label": "2419200 (4 weeks)",
                                                              "value": 2419200,
                                                            },
                                                          ]
                                        }
                                        value={604800}
                              />
                    </ModalFormGroup>
          </span>
</div>,
        "errors": Object {},
        "noCancel": false,
        "noCancelEvent": false,
        "noSubmit": false,
        "onCancel": [Function],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ModalFormGroup
              apiKey="domain"
              errors={Object {}}
              id="domain"
              label="Primary Domain"
>
              <Input
                            className=""
                            id="domain"
                            name="domain"
                            onChange={[Function]}
                            placeholder="domain.com"
                            value="example.com"
              />
</ModalFormGroup>,
            <ModalFormGroup
              apiKey="group"
              description="Domains are grouped together on the Domain list page"
              errors={Object {}}
              id="group"
              label="Group"
>
              <Input
                            className=""
                            id="group"
                            name="group"
                            onChange={[Function]}
                            placeholder=""
                            value="Example Display Group"
              />
</ModalFormGroup>,
            null,
            <ModalFormGroup
              apiKey="axfr_ips"
              description="The IP addresses allowed to AXFR this entire zone. Semicolon delimited. (maximum: 6)"
              errors={Object {}}
              id="axfrIps"
              label="Domain Transfers"
              name="axfr_ips"
>
              <Textarea
                            className=""
                            id="axfrIps"
                            name="axfrIps"
                            onChange={[Function]}
                            placeholder="172.92.1.4;209.124.103.15"
                            value="44.55.66.77"
              />
</ModalFormGroup>,
            <span>
              <ModalFormGroup
                            apiKey="soa_email"
                            description="Email address of the Domain administrator"
                            errors={Object {}}
                            id="email"
                            label="Email"
              >
                            <Input
                                          className=""
                                          id="email"
                                          name="email"
                                          onChange={[Function]}
                                          placeholder="admin@domain.com"
                                          type="email"
                                          value="admin@example.com"
                            />
              </ModalFormGroup>
              <ModalFormGroup
                            apiKey="status"
                            errors={Object {}}
                            id="status"
                            label="Status"
              >
                            <Select
                                          analytics={
                                                        Object {
                                                                      "noTrack": false,
                                                                    }
                                          }
                                          className=""
                                          id="status"
                                          name="status"
                                          onChange={[Function]}
                                          options={
                                                        Array [
                                                                      Object {
                                                                        "label": "Active (turn on serving of this domain)",
                                                                        "value": "active",
                                                                      },
                                                                      Object {
                                                                        "label": "Disabled (turn off serving of this domain)",
                                                                        "value": "disabled",
                                                                      },
                                                                      Object {
                                                                        "label": "Edit Mode (use while making edits)",
                                                                        "value": "edit_mode",
                                                                      },
                                                                    ]
                                          }
                                          value="active"
                            />
              </ModalFormGroup>
              <h3
                            className="sub-header"
              >
                            Advanced
              </h3>
              <ModalFormGroup
                            apiKey="ttl_sec"
                            description="The default Time To Live for all entries in the Domain"
                            errors={Object {}}
                            id="defaultTTL"
                            label="Default TTL"
              >
                            <SelectDNSSeconds
                                          id="defaultTTL"
                                          name="defaultTTL"
                                          onChange={[Function]}
                                          value={3600}
                            />
              </ModalFormGroup>
              <ModalFormGroup
                            apiKey="refresh_sec"
                            description="How often secondary (slave) nameservers check with the master for updates"
                            errors={Object {}}
                            id="refreshRate"
                            label="Refresh Rate"
              >
                            <SelectDNSSeconds
                                          id="refreshRate"
                                          name="refreshRate"
                                          onChange={[Function]}
                                          value={14400}
                            />
              </ModalFormGroup>
              <ModalFormGroup
                            apiKey="retry_sec"
                            description="How long secondary (slave) nameservers wait to contact the master nameserver again if the last attempt failed"
                            errors={Object {}}
                            id="retryRate"
                            label="Retry Rate"
              >
                            <SelectDNSSeconds
                                          id="retryRate"
                                          name="retryRate"
                                          onChange={[Function]}
                                          value={3600}
                            />
              </ModalFormGroup>
              <ModalFormGroup
                            apiKey="expire_sec"
                            description="How long secondary (slave) nameservers wait before considering DNS data stale if it cannot reach the master nameserver"
                            errors={Object {}}
                            id="expireTime"
                            label="Expire Time"
              >
                            <Select
                                          analytics={
                                                        Object {
                                                                      "noTrack": false,
                                                                    }
                                          }
                                          className=""
                                          id="expireTime"
                                          name="expireTime"
                                          onChange={[Function]}
                                          options={
                                                        Array [
                                                                      Object {
                                                                        "label": "Default (1 week)",
                                                                        "value": 604800,
                                                                      },
                                                                      Object {
                                                                        "label": "1209600 (2 weeks)",
                                                                        "value": 1209600,
                                                                      },
                                                                      Object {
                                                                        "label": "2419200 (4 weeks)",
                                                                        "value": 2419200,
                                                                      },
                                                                    ]
                                          }
                                          value={604800}
                            />
              </ModalFormGroup>
</span>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "apiKey": "domain",
              "children": <Input
                className=""
                id="domain"
                name="domain"
                onChange={[Function]}
                placeholder="domain.com"
                value="example.com"
/>,
              "errors": Object {},
              "id": "domain",
              "label": "Primary Domain",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "",
                "id": "domain",
                "name": "domain",
                "onChange": [Function],
                "placeholder": "domain.com",
                "value": "example.com",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "apiKey": "group",
              "children": <Input
                className=""
                id="group"
                name="group"
                onChange={[Function]}
                placeholder=""
                value="Example Display Group"
/>,
              "description": "Domains are grouped together on the Domain list page",
              "errors": Object {},
              "id": "group",
              "label": "Group",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "",
                "id": "group",
                "name": "group",
                "onChange": [Function],
                "placeholder": "",
                "value": "Example Display Group",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          null,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "apiKey": "axfr_ips",
              "children": <Textarea
                className=""
                id="axfrIps"
                name="axfrIps"
                onChange={[Function]}
                placeholder="172.92.1.4;209.124.103.15"
                value="44.55.66.77"
/>,
              "description": "The IP addresses allowed to AXFR this entire zone. Semicolon delimited. (maximum: 6)",
              "errors": Object {},
              "id": "axfrIps",
              "label": "Domain Transfers",
              "name": "axfr_ips",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "",
                "id": "axfrIps",
                "name": "axfrIps",
                "onChange": [Function],
                "placeholder": "172.92.1.4;209.124.103.15",
                "value": "44.55.66.77",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <ModalFormGroup
                  apiKey="soa_email"
                  description="Email address of the Domain administrator"
                  errors={Object {}}
                  id="email"
                  label="Email"
>
                  <Input
                                    className=""
                                    id="email"
                                    name="email"
                                    onChange={[Function]}
                                    placeholder="admin@domain.com"
                                    type="email"
                                    value="admin@example.com"
                  />
</ModalFormGroup>,
                <ModalFormGroup
                  apiKey="status"
                  errors={Object {}}
                  id="status"
                  label="Status"
>
                  <Select
                                    analytics={
                                                      Object {
                                                                        "noTrack": false,
                                                                      }
                                    }
                                    className=""
                                    id="status"
                                    name="status"
                                    onChange={[Function]}
                                    options={
                                                      Array [
                                                                        Object {
                                                                          "label": "Active (turn on serving of this domain)",
                                                                          "value": "active",
                                                                        },
                                                                        Object {
                                                                          "label": "Disabled (turn off serving of this domain)",
                                                                          "value": "disabled",
                                                                        },
                                                                        Object {
                                                                          "label": "Edit Mode (use while making edits)",
                                                                          "value": "edit_mode",
                                                                        },
                                                                      ]
                                    }
                                    value="active"
                  />
</ModalFormGroup>,
                <h3
                  className="sub-header"
>
                  Advanced
</h3>,
                <ModalFormGroup
                  apiKey="ttl_sec"
                  description="The default Time To Live for all entries in the Domain"
                  errors={Object {}}
                  id="defaultTTL"
                  label="Default TTL"
>
                  <SelectDNSSeconds
                                    id="defaultTTL"
                                    name="defaultTTL"
                                    onChange={[Function]}
                                    value={3600}
                  />
</ModalFormGroup>,
                <ModalFormGroup
                  apiKey="refresh_sec"
                  description="How often secondary (slave) nameservers check with the master for updates"
                  errors={Object {}}
                  id="refreshRate"
                  label="Refresh Rate"
>
                  <SelectDNSSeconds
                                    id="refreshRate"
                                    name="refreshRate"
                                    onChange={[Function]}
                                    value={14400}
                  />
</ModalFormGroup>,
                <ModalFormGroup
                  apiKey="retry_sec"
                  description="How long secondary (slave) nameservers wait to contact the master nameserver again if the last attempt failed"
                  errors={Object {}}
                  id="retryRate"
                  label="Retry Rate"
>
                  <SelectDNSSeconds
                                    id="retryRate"
                                    name="retryRate"
                                    onChange={[Function]}
                                    value={3600}
                  />
</ModalFormGroup>,
                <ModalFormGroup
                  apiKey="expire_sec"
                  description="How long secondary (slave) nameservers wait before considering DNS data stale if it cannot reach the master nameserver"
                  errors={Object {}}
                  id="expireTime"
                  label="Expire Time"
>
                  <Select
                                    analytics={
                                                      Object {
                                                                        "noTrack": false,
                                                                      }
                                    }
                                    className=""
                                    id="expireTime"
                                    name="expireTime"
                                    onChange={[Function]}
                                    options={
                                                      Array [
                                                                        Object {
                                                                          "label": "Default (1 week)",
                                                                          "value": 604800,
                                                                        },
                                                                        Object {
                                                                          "label": "1209600 (2 weeks)",
                                                                          "value": 1209600,
                                                                        },
                                                                        Object {
                                                                          "label": "2419200 (4 weeks)",
                                                                          "value": 2419200,
                                                                        },
                                                                      ]
                                    }
                                    value={604800}
                  />
</ModalFormGroup>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "apiKey": "soa_email",
                  "children": <Input
                    className=""
                    id="email"
                    name="email"
                    onChange={[Function]}
                    placeholder="admin@domain.com"
                    type="email"
                    value="admin@example.com"
/>,
                  "description": "Email address of the Domain administrator",
                  "errors": Object {},
                  "id": "email",
                  "label": "Email",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "className": "",
                    "id": "email",
                    "name": "email",
                    "onChange": [Function],
                    "placeholder": "admin@domain.com",
                    "type": "email",
                    "value": "admin@example.com",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "apiKey": "status",
                  "children": <Select
                    analytics={
                                        Object {
                                                            "noTrack": false,
                                                          }
                    }
                    className=""
                    id="status"
                    name="status"
                    onChange={[Function]}
                    options={
                                        Array [
                                                            Object {
                                                              "label": "Active (turn on serving of this domain)",
                                                              "value": "active",
                                                            },
                                                            Object {
                                                              "label": "Disabled (turn off serving of this domain)",
                                                              "value": "disabled",
                                                            },
                                                            Object {
                                                              "label": "Edit Mode (use while making edits)",
                                                              "value": "edit_mode",
                                                            },
                                                          ]
                    }
                    value="active"
/>,
                  "errors": Object {},
                  "id": "status",
                  "label": "Status",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "analytics": Object {
                      "noTrack": false,
                    },
                    "className": "",
                    "id": "status",
                    "name": "status",
                    "onChange": [Function],
                    "options": Array [
                      Object {
                        "label": "Active (turn on serving of this domain)",
                        "value": "active",
                      },
                      Object {
                        "label": "Disabled (turn off serving of this domain)",
                        "value": "disabled",
                      },
                      Object {
                        "label": "Edit Mode (use while making edits)",
                        "value": "edit_mode",
                      },
                    ],
                    "value": "active",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Advanced",
                  "className": "sub-header",
                },
                "ref": null,
                "rendered": "Advanced",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "apiKey": "ttl_sec",
                  "children": <SelectDNSSeconds
                    id="defaultTTL"
                    name="defaultTTL"
                    onChange={[Function]}
                    value={3600}
/>,
                  "description": "The default Time To Live for all entries in the Domain",
                  "errors": Object {},
                  "id": "defaultTTL",
                  "label": "Default TTL",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "id": "defaultTTL",
                    "name": "defaultTTL",
                    "onChange": [Function],
                    "value": 3600,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "apiKey": "refresh_sec",
                  "children": <SelectDNSSeconds
                    id="refreshRate"
                    name="refreshRate"
                    onChange={[Function]}
                    value={14400}
/>,
                  "description": "How often secondary (slave) nameservers check with the master for updates",
                  "errors": Object {},
                  "id": "refreshRate",
                  "label": "Refresh Rate",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "id": "refreshRate",
                    "name": "refreshRate",
                    "onChange": [Function],
                    "value": 14400,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "apiKey": "retry_sec",
                  "children": <SelectDNSSeconds
                    id="retryRate"
                    name="retryRate"
                    onChange={[Function]}
                    value={3600}
/>,
                  "description": "How long secondary (slave) nameservers wait to contact the master nameserver again if the last attempt failed",
                  "errors": Object {},
                  "id": "retryRate",
                  "label": "Retry Rate",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "id": "retryRate",
                    "name": "retryRate",
                    "onChange": [Function],
                    "value": 3600,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "apiKey": "expire_sec",
                  "children": <Select
                    analytics={
                                        Object {
                                                            "noTrack": false,
                                                          }
                    }
                    className=""
                    id="expireTime"
                    name="expireTime"
                    onChange={[Function]}
                    options={
                                        Array [
                                                            Object {
                                                              "label": "Default (1 week)",
                                                              "value": 604800,
                                                            },
                                                            Object {
                                                              "label": "1209600 (2 weeks)",
                                                              "value": 1209600,
                                                            },
                                                            Object {
                                                              "label": "2419200 (4 weeks)",
                                                              "value": 2419200,
                                                            },
                                                          ]
                    }
                    value={604800}
/>,
                  "description": "How long secondary (slave) nameservers wait before considering DNS data stale if it cannot reach the master nameserver",
                  "errors": Object {},
                  "id": "expireTime",
                  "label": "Expire Time",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "analytics": Object {
                      "noTrack": false,
                    },
                    "className": "",
                    "id": "expireTime",
                    "name": "expireTime",
                    "onChange": [Function],
                    "options": Array [
                      Object {
                        "label": "Default (1 week)",
                        "value": 604800,
                      },
                      Object {
                        "label": "1209600 (2 weeks)",
                        "value": 1209600,
                      },
                      Object {
                        "label": "2419200 (4 weeks)",
                        "value": 2419200,
                      },
                    ],
                    "value": 604800,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": "span",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
