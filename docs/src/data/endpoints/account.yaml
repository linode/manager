# vim: set et ts=2 sw=2 tw=80 :
name: Account
sort: 1
description: >
  Account endpoints provide a means of manipulating your account, including users,
  OAuth Clients and Tokens, and Events.
endpoints:
  /account/settings:
    group: Settings
    type: resource
    description: >
      Manage your account settings.
    methods:
      GET:
        response: account
        description: >
          Returns your account settings.
        examples:
          curl: |
            curl https://$api_root/$version/account/settings
          python: |
            my_settings = client.account.get_settings()
      PUT:
        description: >
          Edits your account settings.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X PUT -d '{
                  "address_1": "123 Main St.",
                  "address_2": "Suite 101",
                  "city": "Philadelphia",
                  "company": "My Company, LLC",
                  "country": "US",
                  "email": "jsmith@mycompany.com",
                  "first_name": "John",
                  "last_name": "Smith",
                  "network_helper": true,
                  "phone": "555-555-1212",
                  "state": "PA",
                  "zip": 19102
                  }
                }' \
                https://$api_root/$version/account/settings
          python: |
            my_settings = client.account.get_settings()
            my_settings.address_1 = '123 Main St.'
            my_settings.address_2 = 'Suite 101'
            my_settings.city = 'Philadelphia'
            my_settings.company = 'My Company, LLC'
            my_settings.country = 'US'
            my_settings.email = 'jsmith@company.com'
            my_settings.save()
  /account/oauth-clients:
    group: OAuth Clients
    authenticated: true
    description: >
      Manage the collection of OAuth client applications your account may access.
    methods:
      GET:
        response: client
        paginationKey: clients
        oauth: clients:view
        description: >
          Returns a list of OAuth clients for your user. If you are an admin
          user, you will see all OAuth clients associated with all users on your
          account.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://$api_root/$version/account/oauth-clients
          python: |
            my_clients = client.account.get_oauth_clients()
      POST:
        oauth: clients:create
        description: >
          Registers a new OAuth client application.
        params:
          label:
            description: A name for the new client application.
            type: String
            limit: "1-128 characters"
          redirect_uri:
            description: A URL to redirect to after the OAuth flow has completed.
            type: String
            limit: "1-512 characters"
          public:
            description: Whether this client is intended will use the implicit
              OAuth flow because it cannot safely store the client_secrete.
              An example of this would be a Single-Page Application (SPA) for
              the Web.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "label": "Example app",
                    "redirect_uri": "https://oauthreturn.example.org/",
                }' \
                https://$api_root/$version/account/oauth-clients
          python: |
            new_client = client.account.create_oauth_client('Example app', 'https://oauthreturn.example.org/')
  /account/oauth-clients/$id:
    group: OAuth Clients
    type: resource
    authenticated: true
    description: >
      Manage a particular OAuth client application your account may access.
      Admin users can manage any OAuth client associated with this account.
    methods:
      GET:
        response: client
        oauth: clients:view
        description: >
          Returns information about this OAuth client.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://$api_root/$version/account/oauth-clients/$client_id
          python: |
            my_client = linode.OAuthClient(client, 123)
      PUT:
        oauth: clients:modify
        description: >
          Edits this OAuth client.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X PUT -d '{
                    "name": "Updated app name",
                    "redirect_uri": "https://newredirect.example.org/",
                }' \
                https://$api_root/$version/account/oauth-clients/$client_id
          python: |
            my_client.name = 'Updated app name'
            my_client.save()
      DELETE:
        oauth: clients:delete
        dangerous: true
        description: >
          Delete this OAuth application. This action cannot be undone.
          Once an OAuth Application is deleted, all associated OAuth
          tokens that were generated on its behalf are expired as well.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                -X DELETE \
                https://$api_root/$version/account/oauth-clients/$client_id
          python: |
            my_client = linode.OAuthClient(client, 123)
            my_client.delete()
  /account/oauth-clients/$id/reset_secret:
    group: OAuth Clients
    type: Action
    authenticated: true
    description: >
      Reset the OAuth application's client secret.
    methods:
      POST:
        oauth: clients:modify
        dangerous: true
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST \
                https://$api_root/$version/account/oauth-clients/$client_id/reset_secret
          python: |
            my_client = linode.OAuthClient(client, 123)
            new_secret = my_client.reset_secret()
  /account/oauth-clients/$id/thumbnail:
    group: OAuth Clients
    type: Action
    authenticated: true
    description: >
      Manage the OAuth application's thumbnail image.
    methods:
      GET:
        oauth: clients:view
        description: >
          Retrieve the OAuth application's current thumbnail image.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://$api_root/$version/account/oauth-clients/$client_id/thumbnail
          python: |
            img = my_client.get_thumbnail()

            # save image to file
            my_client.get_thumbnail('client_thumbnail.png')
      PUT:
        oauth: clients:modify
        description: >
          Set or update the OAuth application's thumbnail image.
          If the image is larger than 128x128 it will be scaled down.
        examples:
          curl: |
            curl -H "Content-Type: image/png" \
                -H "Authorization: Bearer $TOKEN" \
                -X PUT \
                --data-binary "@/path/to/image"
                https://$api_root/$version/account/oauth-clients/$client_id/thumbnail
          python: |
            my_client = linode.OAuthClient(client, 123)
            my_client.set_thumbnail('/path/to/image')

            # set from memory
            with open('/path/to/image', 'rb') as f:
                img = f.read()
            my_client.set_thumbnail(img)
  /account/users:
    group: Users
    description: >
      Returns a list of User objects associated with your account.
    methods:
      GET:
        response: user
        paginationKey: users
        examples:
          curl: |
            curl https://$api_root/$version/account/users
          python: |
            my_users = client.account.get_users()
      POST:
        description: >
          Creates a new user.
        params:
          username:
            type: String
            description: The username for the new user.
          email:
            type: String
            description: The user's email.
          password:
            type: String
            description: The user's password.
          restricted:
            optinoal: true
            type: Boolean
            description: If false, this user has access to the entire account.  Defaults to true.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "username": "testguy",
                    "password": "hunter7",
                    "email": "testguy@linode.com"
                }' \
                https://$api_root/$version/account/users
          python: |
            # currently unimplemented
  /account/users/$username:
    group: Users
    type: resource
    description: >
      Returns information about a specific user associated with your account.
    methods:
      GET:
        response: user
        examples:
          curl: |
            curl https://$api_root/$version/account/users/$username
          python: |
            my_user = linode.User(client, 'username')
      PUT:
        description: >
          Update a user.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X PUT -d '{
                    "email": "newemail@linode.com"
                  }
                }' \
                https://$api_root/$version/account/users/testguy
          python: |
            my_user = linode.User(client, 'username')
            my_user.email = 'newemail@linode.com'
            my_user.save()
      DELETE:
        description: >
          Deletes a user.  May not delete the last unrestricted user on the account.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                -X DELETE \
                https://$api_root/$version/account/users/testguy
          python: |
            my_user = linode.User(client, 'username')
            my_user.delete()
  /account/users/$username/password:
    group: Users
    type: Action
    description: >
      Update a user's password
    methods:
      POST:
        params:
          password:
            type: String
            description: The user's new password.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "password": "hunter7",
                }' \
                https://$api_root/$version/account/users/testguy/password
          python: |
            my_user = linode.User(client, 'username')
            my_user.change_password('hunter7')
  /account/users/$username/grants:
    group: Users
    type: resource
    description: >
      Manage grants for restricted users.  It is an error to call this endpoint for unrestrcited users.  Only unrestricted
      users may access this endpoint.
    methods:
      GET:
        response: usergrants
        description: Get grants for a restricted user.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://$api_root/$version/account/users/testguy/grants
          python: |
            my_user = linode.User(client, 'username')
            grants = None # unrestricted users have no grants

            if my_user.restricted:
                grants = my_user.grants
      PUT:
        description: >
          Update grants for a restricted user.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                -X PUT -d '{
                    "global": {
                        "add_linodes": true
                    }
                }' \
                https://$api_root/$version/account/users/testguy/grants
          python: |
            my_user = linode.User(client, 'username')
            assert my_user.restricted # we can't set grants for unrestricted users

            my_user.grants.global.add_linodes = True
            my_user.grants.save()
  /account/oauth-clients:
    group: OAuth Clients
    authenticated: true
    description: >
      Manage the collection of OAuth client applications your account may access.
    methods:
      GET:
        response: client
        paginationKey: clients
        oauth: clients:view
        description: >
          Returns a list of clients.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://$api_root/$version/account/oauth-clients
      POST:
        oauth: clients:create
        description: >
          Registers a new OAuth client application.
        params:
          name:
            description: A name for the new client application.
            type: string
            limit: "1-128 characters"
          redirect_uri:
            description: A URL to redirect to after the OAuth flow has completed.
            type: string
            limit: "1-512 characters"
          public:
            optional: true
            description: >
              If true, this client uses the implicit OAuth flow and does not
              use a client secret.
            type: Boolean
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "name": "Example app",
                    "redirect_uri": "https://oauthreturn.example.org/",
                }' \
                https://$api_root/$version/account/oauth-clients
  /account/oauth-clients/$id:
    group: OAuth Clients
    type: resource
    authenticated: true
    description: >
      Manage a particular OAuth client application your account may access.
    methods:
      GET:
        response: client
        oauth: clients:view
        description: >
          Returns information about this OAuth client.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://$api_root/$version/account/oauth-clients/$client_id
      PUT:
        oauth: clients:modify
        description: >
          Edits this OAuth client.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X PUT -d '{
                    "name": "Updated app name",
                    "redirect_uri": "https://newredirect.example.org/",
                }' \
                https://$api_root/$version/account/oauth-clients/$client_id
      DELETE:
        oauth: clients:delete
        dangerous: true
        description: >
          Delete this OAuth application. This action cannot be undone.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                -X DELETE \
                https://$api_root/$version/account/oauth-clients/$client_id
  /account/events:
    group: Events
    authenticated: true
    description: >
      View the collection of events.
    methods:
      GET:
        response: event
        paginationKey: events
        description: >
          Returns a list of events.
        examples:
          curl: |
            curl https://$api_root/$version/account/events
          python: |
            my_events = client.account.get_events()
  /account/events/$id:
    group: Events
    type: resource
    authenticated: true
    description: >
      Returns information about a specific event.
    methods:
      GET:
        response: events
        description: >
          Returns information about this event.
        examples:
          curl: |
            curl https://$api_root/$version/account/event/123
          python: |
            event = linode.Event(client, 123)
  /account/events/$id/seen:
    group: Events
    type: resource
    authenticated: true
    methods:
      POST:
        description: >
          Marks all events up to and including :id as seen.
        examples:
          curl: |
            curl https://$api_root/$version/account/event/123/seen
          python: |
            client.mark_lask_seen_event(event)
  /account/events/$id/read:
    group: Events
    type: resource
    authenticated: true
    methods:
      POST:
        description: >
          Updates specific event to designate that it has been read.
        examples:
          curl: |
            curl https://$api_root/$version/account/event/123/read
          python: |
            event.mark_read()
  /account/invoices:
    group: Invoices
    authenticated: true
    description: >
      View the collection of invoices.
    methods:
      GET:
        response: invoice
        paginationKey: invoice
        description: >
          Returns a list of invoices.
        examples:
          curl: |
            curl https://$api_root/$version/account/invoices
  /account/invoices/:id:
    group: Invoices
    type: resource
    authenticated: true
    description: >
      Returns information about a specific invoice.
    methods:
      GET:
        response: invoices
        description: >
          Returns information about this invoice.
        examples:
          curl: |
            curl https://$api_root/$version/account/invoices/123
  /account/invoices/:id/items:
    group: Invoices
    type: resource
    authenticated: true
    description: >
      View the items associated with a specific invoice.
    methods:
      GET:
        response: invoice_items
        description: >
          Returns a collection of invoice items.
        examples:
          curl: |
            curl https://$api_root/$version/account/invoices/123/items
  /account/payments:
    group: Payments
    type: Resource
    authenticated: true
    description: >
      View the collection of payments.
    methods:
      GET:
        response: payment
        description: >
          Returns information about this payment.
        examples:
          curl: |
            curl https://$api_root/$version/account/payments
      POST:
        oauth: account:modify
        response: payment
        description: >
          Make a payment.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "usd": 100,
                }' \
                https://$api_root/$version/account/payments
  /account/payments/:id:
    group: Payments
    type: Resource
    authenticated: true
    description: >
      Returns information about a specific payment.
    methods:
      GET:
        response: payment
        description: >
          Returns information about this payment.
        examples:
          curl: |
            curl https://$api_root/$version/account/payments/123

