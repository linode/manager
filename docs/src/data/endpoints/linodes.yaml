# vim: set et ts=2 sw=2 tw=80 :
name: Linodes
sort: 0
description: >
  Linode endpoints provide a means of managing the Linode objects on your account.
endpoints:
  /linode/instances:
    authenticated: true
    description: >
      Manage the collection of Linodes your account may access.
    methods:
      GET:
        response: linode
        paginationKey: linodes
        oauth: linodes:view
        description: >
          Returns a list of Linodes.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://$api_root/$version/linode/instances
          python: |
            my_linodes = client.linode.get_instances()
      POST:
        money: true
        oauth: linodes:create
        description: >
          Creates a new Linode.
        params:
          region:
            description: >
              A region ID to provision
              this Linode in.
            type: string
            value: us-east-1a
          type:
            description: A Linode type ID to use for this Linode.
            type: string
          label:
            optional: true
            description: The label to assign this Linode. Defaults to "linode".
            type: String
            limit: "3-32 ASCII characters limited to letters, numbers, underscores, and dashes, starting and ending with a letter, and without two dashes or underscores in a row"
          group:
            optional: true
            description: The group to assign this Linode. Defaults to "empty".
            type: String
            limit: 0-50 characters
          distribution:
            optional: true
            description: >
              The Distribution to deploy this Linode with.  May not be included if 'backup' is sent.
            type: string
          root_pass:
            optional: unless source == "distro"
            description: >
              The root password to use when sourcing this Linode from a distribution.
              <ul><li>root_pass is required if the source provided is a distribution.</li></ul>
            type: String
          root_ssh_key:
            optional: true
            description: >
              A public SSH key file to install at `/root/.ssh/authorized_keys` when creating this Linode.
            type: String
          stackscript_id:
            optional: true
            description: >
              The stackscript ID to deploy with this disk.
              <ul><li>Must provide a distribution. Distribution must be
              one that the stackscript can be deployed to.</li></ul>
            type: Integer
          stackscript_data:
            optional: true
            description: >
              UDF (user-defined fields) for this stackscript. Defaults to "{}".
              <ul><li>Must match UDFs required by stackscript.</li></ul>
            type: String
          backup_id:
            optional: true
            description: >
              The Backup to restore to the newly created
              Linode.  May not be included if 'distribution' is sent.
            type: Integer
          backups_enabled:
            optional: true
            description: >
              Subscribes this Linode with the Backup service. (Additional charges apply.) Defaults to "false".
            type: Boolean
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '$SUB_SPEC_EXAMPLE' \
                https://$api_root/$version/linode/instances
          python: |
            my_linode = client.linode.create_instance(client.get_regions().first(), 'g5-nanode-1')

            distro = client.linode.get_distributons(linode.Distribution.vendor == 'debian').first()
            ( my_linode_2, password ) = client.linode.create_instance('us-east-1a', 'g5-standard-1', distribution=distro)
  /linode/instances/$id:
    type: resource
    authenticated: true
    description: >
      Manage a particular Linode your account may access.
    methods:
      GET:
        response: linode
        oauth: linodes:view
        description: >
          Returns information about this Linode.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://$api_root/$version/linode/instances/$linode_id
          python: |
            my_linode = linode.Linode(client, 123)
      PUT:
        oauth: linodes:modify
        description: >
          Edits this Linode.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X PUT -d '{
                  "label": "newlabel",
                  "schedule": {
                    "day": "Tuesday",
                    "window": "W20"
                  }
                }' \
                https://$api_root/$version/linode/instances/$linode_id
          python: |
            my_linode.label = 'newlabel'
            my_linode.save()
      DELETE:
        oauth: linodes:delete
        dangerous: true
        description: >
          Deletes this Linode. This action cannot be undone.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                -X DELETE \
                https://$api_root/$version/linode/instances/$linode_id
          python: |
            my_linode.delete()
  /linode/instances/$id/disks:
    group: Disks
    authenticated: true
    description: >
      Manage the disks associated with this Linode.
    methods:
      GET:
        response: disk
        paginationKey: disks
        oauth: linodes:view
        description: >
          Returns a list of disks.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://$api_root/$version/linode/instances/$linode_id/disks
          python: |
            disks = my_linode.disks
      POST:
        oauth: linodes:modify
        description: >
          Creates a new disk.
        params:
          size:
            description: >
              Size in MB for this disk.
            type: Integer
            limit: between 0 and the available space on the Linode
          distribution:
            optional: true
            description: >
              Optional distribution to deploy with this disk.
              <ul><li>If no distribution is provided, a blank disk
              is created.</li></ul>
            type: Distribution
          root_pass:
            optional: unless distribution is specified
            description: >
              Root password to deploy distribution with.
              <ul><li>root_pass is required if a distribution is provided.</li></ul>
            type: String
          root_ssh_key:
            optional: unless distribution is not specified
            description: >
              SSH key to add to root's authorized_keys.
            type: String
          label:
            description: >
              User-friendly string to name this disk.
            type: String
            limit: 1-50 characters
          filesystem:
            optional: true
            description: >
              A filesystem for this disk. Defaults to "ext4".
            type: String
          read_only:
            optional: true
            description: >
              If true, this disk is read-only.
            type: Boolean
          stackscript_id:
            optional: true
            description: >
              The stackscript ID to deploy with this disk.
              <ul><li>Must provide a distribution. Distribution must be
              one that the stackscript can be deployed to.</li></ul>
            type: Integer
          stackscript_data:
            optional: true
            description: >
              UDF (user-defined fields) for this stackscript. Defaults to "{}".
              <ul><li>Must match UDFs required by stackscript.</li></ul>
            type: String
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "label": "Example Disk",
                    "filesystem": "ext4",
                    "size": 4096
                }' \
                https://$api_root/$version/linode/instances/$linode_id/disks
          python: |
            new_disk = my_linode.create_disk(4096, filesystem='ext4', label='Example Disk')
  /linode/instances/$id/disks/$id:
    group: Disks
    type: resource
    authenticated: true
    description: >
      Manage a particular disk associated with this Linode.
    methods:
      GET:
        response: disk
        oauth: linodes:view
        description: >
          Returns information about this disk.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://$api_root/$version/linode/instances/$linode_id/disks/$disk_id
          python: |
            disk = my_linode.Disk(client, 456, 123) # linode_client, disk_id, linode_id
      PUT:
        oauth: linodes:modify
        description: >
          Updates a disk's metadata.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X PUT -d '{
                  "label": "New Disk Label"
                }' \
                https://$api_root/$version/linode/instances/$linode_id/disks/$disk_id
          python: |
            disk.label = 'New Disk Label'
            disk.save()
      POST:
        oauth: linodes:create
        description: >
          Duplicates this disk.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST \
                https://$api_root/$version/linode/instances/$linode_id/disks/$disk_id
          python: |
            new_disk = disk.duplicate()
      DELETE:
        oauth: linodes:delete
        dangerous: true
        description: >
          Deletes this disk. This action cannot be undone.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                -X DELETE \
                https://$api_root/$version/linode/instances/$linode_id/disks/$disk_id
          python: |
            disk.delete()
  /linode/instances/$id/disks/$id/resize:
    group: Disks
    type: Strange
    authenticated: true
    description: Resizes the disk.
    methods:
      POST:
        oauth: linodes:modify
        dangerous: true
        params:
          size:
            description: The desired size of the disk in MB.
            type: Integer
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "size": 1024
                }' \
                https://$api_root/$version/linode/instances/$linode_id/disks/$disk_id/resize
  /linode/instances/$id/disks/$id/password:
    group: Disks
    type: Strange
    authenticated: true
    description: >
      Resets the root password of a disk.
    methods:
      POST:
        oauth: linodes:modify
        dangerous: true
        params:
          password:
            description: >
              New root password for the OS installed on this disk.
            type: String
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "password": "hunter2"
                }' \
                https://$api_root/$version/linode/instances/$linode_id/disks/$disk_id/password
          python: |
            disk.reset_root_password('hunter2')
  /linode/instances/$id/configs:
    group: Configs
    authenticated: true
    description: >
      Manage the boot configs on this Linode.
    methods:
      GET:
        response: linode_config
        paginationKey: configs
        oauth: linodes:view
        description: >
          Returns a list of configs for a given Linode.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://$api_root/$version/linode/instances/$linode_id/configs
          python: |
            configs = my_linode.configs
      POST:
        oauth: linodes:modify
        description: >
          Creates a new config for a given Linode.
        params:
          kernel:
            optional: true
            description: >
              A kernel ID to boot this Linode with.
              Defaults to "linode/latest-64bit".
            type: string
            value: linode/latest-64bit
          label:
            description: >
              The user-friendly label to name this config.
            limit: 1-48 characters
            type: string
            value: My config
          devices:
            description: >
              Disks attached to this Linode config.
            type: devices
          comments:
            optional: true
            description: >
              Optional field for arbitrary user comments on this config.
            limit: 1-255 characters
            type: String
            value: This is my config.
          ram_limit:
            optional: true
            description: >
              The maximum RAM the Linode will be given when booting this
              config. This defaults to the total RAM of the Linode.
            limit: between 0 and the Linode's total RAM
            type: Integer
          root_device_ro:
            optional: true
            description: >
              Controls whether to mount the root disk read-only. Defaults
              to false.
            type: Boolean
          devtmpfs_automount:
            optional: true
            description: >
              Populates the /dev directory early during boot without udev.
              Defaults to false.
            type: Boolean
          run_level:
            optional: true
            description: >
              Sets the run level for Linode boot. Defaults to "default".
            type: Enum
          virt_mode:
            optional: true
            description: >
              Controls the virtualization mode. Defaults to "paravirt".
            type: Enum
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '$SUB_SPEC_EXAMPLE' \
              https://$api_root/$version/linode/instances/$linode_id/configs
          python: |
            config = my_linode.create_config('linode/latest_64', disks=linode.disks, label='Arch Linux Config')
  /linode/instances/$id/configs/$id:
    group: Configs
    type: resource
    authenticated: true
    description: >
      Manage a particular config for a given Linode.
    methods:
      GET:
        response: linode_config
        oauth: linodes:view
        description: >
          Returns information about this Linode config.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://$api_root/$version/linode/instances/$linode_id/configs/$config_id
          python: |
            config = my_linode.Config(client, 567, 123) # linode_client, config_id, linode_id
      PUT:
        oauth: linodes:modify
        description: >
          Modifies a given Linode config.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X PUT -d '{
                    "label": "Edited config",
                    "kernel": {
                      "id": "linode/latest_64"
                    },
                    "disks": {
                      "sda": {
                        "id": 5567
                      }
                    }
                }' \
                https://$api_root/$version/linode/instances/$linode_id/configs/$config_id
          python:
            config.label = 'Edited config'
            config.kernel = linode.Kernel(client, 'linode/latest_64')
            config.save()
      DELETE:
        oauth: linodes:modify
        description: >
          Deletes a given Linode config.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X DELETE \
                https://$api_root/$version/linode/instances/$linode_id/configs/$config_id
          python: |
            config.delete()
  /linode/instances/$id/volumes:
    authenticated: true
    description: >
        View Block Storage Volumes attached to this Linode.
    methods:
      GET:
        response: volume
        paginationKey: volumes
        oauth: linodes:view
        description: >
          Returns a list of volumes.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://$api_root/$version/linode/instances/$linode_id/volumes
          python: |
            l = linode.Linode(client, 123)
            volumes_for_linode = l.volumes
  /linode/instances/$id/boot:
    type: Action
    authenticated: true
    description: >
      Boots a Linode.
    methods:
      POST:
        oauth: linodes:modify
        dangerous: false
        params:
          config_id:
            optional: true
            description: >
              Optional config ID to boot the linode with.
            type: Integer
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "config": 5567
                }' \
                https://$api_root/$version/linode/instances/$linode_id/boot
          python: |
            my_linode.boot()
  /linode/instances/$id/shutdown:
    type: Action
    authenticated: true
    description: >
      Shuts down a Linode.
    methods:
      POST:
        oauth: linodes:modify
        dangerous: true
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST \
                https://$api_root/$version/linode/instances/$linode_id/shutdown
          python: |
            my_linode.shutdown()
  /linode/instances/$id/reboot:
    type: Action
    authenticated: true
    description: >
      Reboots a Linode.
    methods:
      POST:
        oauth: linodes:modify
        dangerous: true
        params:
          config_id:
            optional: true
            description: >
              Optional config ID to boot the linode with.
            type: Integer
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "config": 5567

                }' \
                https://$api_root/$version/linode/instances/$linode_id/reboot
          python: |
            my_linode.reboot()
  /linode/instances/$id/kvmify:
    type: Action
    authenticated: true
    description: >
      Changes a Linode's hypervisor from Xen to KVM.
    methods:
      POST:
        oauth: linodes:modify
        dangerous: true
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST \
                https://$api_root/$version/linode/instances/$linode_id/kvmify
          python: |
            my_linode.kvmify()
  /linode/instances/$id/rescue:
    type: Action
    authenticated: true
    description: >
      Reboots a Linode in Rescue Mode.
    methods:
      POST:
        oauth: linodes:modify
        dangerous: false
        params:
          disks:
            optional: true
            description: >
              Disks to include during Rescue.
            type: Disk
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "disks": {
                      "sda": 5567,
                      "sdb": 5568
                      }
                    }
                }' \
                https://$api_root/$version/linode/instances/$linode_id/rescue
          python: |
            my_linode.rescue()
  /linode/instances/$id/clone:
    type: Action
    authenticated: true
    description: >
      Clones a Linode to a new or existing Linode.
    methods:
      POST:
        money: true
        oauth: linodes:create
        dangerous: false
        params:
          region:
            optional: true
            description: >
              A region ID to provision
              this Linode in. Required when cloning to a new Linode.
            type: string
            value: us-east-1a
          type:
            optional: true
            description: >
              A Linode type ID to use for this
              Linode. Required when cloning to a new Linode.
            type: string
          linode_id:
            optional: true
            description: >
              An existing Linode can be a target clone location.
            type: Integer
          label:
            optional: true
            description: The label to assign this Linode when cloning to a new Linode. Defaults to "linode".
            type: String
            limit: "3-32 ASCII characters limited to letters, numbers, underscores, and dashes, starting and ending with a letter, and without two dashes or underscores in a row"
          group:
            optional: true
            description: The group to assign this Linode when cloning to a new Linode. Defaults to "empty".
            type: String
            limit: 0-50 characters
          backups_enabled:
            optional: true
            description: >
              Subscribes this Linode with the Backup service when cloning to a new Linode. (Additional charges apply.) Defaults to "false".
            type: Boolean
          disks:
            optional: true
            description: >
              A list of disk ID's to include in the clone process. All disks attached to configs will be cloned from the source Linode if not provided.
            type: string
            isArray: true
          configs:
            optional: true
            description: >
              A list of config ID's to include in the clone process. All configs will be cloned from the source Linode if not provided.
            type: string
            isArray: true
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "region": "us-east-1a",
                    "type": "g5-standard-1",
                    "disks": [2450]
                    }
                }' \
                https://$api_root/$version/linode/instances/$linode_id/clone
          python: |
            my_linode.clone(region="us-east-1a", type="g5-standard-1", disks=[2450])
  /linode/instances/$id/mutate:
    type: Action
    authenticated: true
    description: >
      Upgrades a Linode to its next generation.
    methods:
      POST:
        oauth: linodes:modify
        dangerous: true
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: token $TOKEN" \
                -X POST \
                https://$api_root/$version/linode/instances/$linode_id/mutate
          python: |
            my_linode.mutate()
  /linode/instances/$id/resize:
    type: Action
    authenticated: true
    description: >
      Resizes a Linode to a new Linode type.
    methods:
      POST:
        money: true
        oauth: linodes:modify
        dangerous: false
        params:
          type:
            description: >
              A Linode type to use for this Linode.
            type: string
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "type": "g5-standard-1"
                    }
                }' \
                https://$api_root/$version/linode/instances/$linode_id/resize
  /linode/instances/$id/backups:
    group: Backups
    authenticated: true
    description: >
      Returns information about this Linode's available backups.
    methods:
      GET:
        response: backupsresponse
        paginationKey: backups
        description: >
          Returns a Backups Response with information on this Linode's available backups.
        oauth: linodes:view
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://$api_root/$version/linode/instances/$linode_id/backups
          python: |
            backups = my_linode.available_backups
      POST:
        oauth: linodes:modify
        dangerous: true
        description: >
          Creates a snapshot backup of a Linode. WARNING:
          If you already have a snapshot, this is a destructive operation.
          The previous snapshot will be deleted.
        params:
          label:
            optional: true
            description: >
              Human-friendly label for this snapshot. Must be 1-50 characters.
            type: String
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "label": "Linode123456 snapshot",
                }' \
                https://$api_root/$version/linode/instances/$linode_id/backups
          python: |
            my_linode.snapshot()
  /linode/instances/$id/backups/enable:
    group: Backups
    type: Action
    authenticated: true
    description: >
       Enables the backup service on the given Linode.
    methods:
      POST:
        money: true
        oauth: linodes:modify
        dangerous: true
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST \
                https://$api_root/$version/linode/instances/$linode_id/backups/enable
          python: |
            my_linode.enable_backups()
  /linode/instances/$id/backups/cancel:
    group: Backups
    type: Action
    authenticated: true
    description: >
      Cancels the backup service on the given Linode.
    methods:
      POST:
        oauth: linodes:delete
        dangerous: true
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST \
                https://$api_root/$version/linode/instances/$linode_id/backups/cancel
          python: |
            my_linode.cancel_backups()
  /linode/instances/$id/backups/$id/restore:
    group: Backups
    type: Action
    authenticated: true
    description: >
      Restores a backup to a Linode.
    methods:
      POST:
        oauth: linodes:create
        dangerous: true
        params:
          linode_id:
            description: >
              The ID of the Linode to restore a backup to.
            type: Integer
          overwrite:
            description: >
                If true, deletes all disks and configs on the target linode before restoring.
            type: Boolean
            optional: true
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "linode": 123456,
                }' \
                https://$api_root/$version/linode/instances/$linode_id/backups/$backup_id/restore
          python: |
            backup = my_linode.available_backups.daily
            backup.restore()
  /linode/instances/$id/ips:
    group: IPs
    type: Strange
    authenticated: true
    description: >
      View networking information for this Linode.
    methods:
      GET:
        response: linodenetworking
        oauth: linodes:view
        description: >
          Returns a Linode Networking Object.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://$api_root/$version/linode/instances/$linode_id/ips
      POST:
        money: true
        oauth: linodes:modify
        description: >
          Allocates a new IP Address for this Linode.
        params:
          type:
            description: >
                An IP Address Type for this IP Address. Public IP's incur a monthly cost.
            type: string
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "type": "private"
                }' \
                https://$api_root/$version/linode/instances/$linode_id/ips
  /linode/instances/$id/ips/sharing:
    group: IPs
    methods:
      POST:
        description: >
            Sets IP Sharing for this Linode.
        params:
          ips:
            type: string
            description: >
              A list of IP Addresses this Linode will share.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "ips": [ "97.107.143.29", "97.107.143.112" ]
                }' \
                https://$api_root/$version/linode/instances/$linode_id/ips/sharing
  /linode/instances/$id/ips/$ip_address:
    group: IPs
    type: Action
    authenticated: true
    description: >
      Manage a particular IP Address associated with this Linode.
    methods:
      GET:
        response: ipaddress
        oauth: linodes:view
        description: >
          Returns information about this IPv4 or IPv6 Address.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://$api_root/$version/linode/instances/$linode_id/ips/$ip_address
      PUT:
        oauth: linodes:modify
        description: >
            Update this IP Address
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X PUT -d '{
                    "rdns":"example.org"
                }' \
                https://$api_root/$version/linode/instances/$linode_id/ips/$ip_address
      DELETE:
        oauth: linodes:modify
        description: >
          Delete a public IPv4 address associated with this Linode
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                -X DELETE \
                https://$api_root/$version/linode/instances/$linode_id/ips/97.107.143.37
  /linode/instances/$id/rebuild:
    type: Action
    authenticated: true
    description: >
      Deletes all Disks and Configs on this Linode, then deploys a new Distribution to this Linode with the given attributes.
      Returns information about this Linode.
    methods:
      POST:
        oauth: linodes:modify
        dangerous: true
        params:
          distribution:
            description: >
                An Distribution to deploy to this Linode.
            type: Distribution
          root_pass:
            description: >
                The root password for the new deployment.
            type: String
          root_ssh_key:
            optional: true
            description: >
                The key to authorize for root access to the new deployment.
            type: String
          stackscript_id:
            optional: true
            description: >
              The stackscript ID to deploy with this disk.
              <ul><li>Must provide a distribution. Distribution must be
              one that the stackscript can be deployed to.</li></ul>
            type: Integer
          stackscript_data:
            optional: true
            description: >
              UDF (user-defined fields) for this stackscript. Defaults to "{}".
              <ul><li>Must match UDFs required by stackscript.</li></ul>
            type: String
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST \
                https://$api_root/$version/linode/instances/$linode_id/rebuild \
                -d '{"distribution":"linode/debian8","root_pass":"hunter7"}'
          python: |
            my_linode.rebuild('linode/ubuntu16.04LTS', root_pass='hunter7')
  /linode/stackscripts:
    group: StackScripts
    description: >
      View public StackScripts.
    methods:
      GET:
        response: stackscript
        paginationKey: stackscripts
        description: >
          Returns a list of public StackScripts.
          Results can be filtered.  Include '"mine": true'
          in the filter dict to see only StackScripts you created.
        examples:
          curl: |
            curl https://$api_root/$version/linode/stackscripts
          python: |
            import stackscript
            TODO
      POST:
        oauth: stackscripts:create
        description: >
          Create a new StackScript.
        params:
          label:
            description: >
              Label of StackScript.
            limit: 3-128 characters
            type: String
          description:
            optional: true
            description: >
              Description of the StackScript.
            type: String
          distributions:
            description: >
              A list of distributions compatible with StackScript.
            type: distribution
          is_public:
            optional: true
            description: >
              If true, this StackScript will be publicly visible in the Linode
              StackScript library. Defaults to False.
            type: Boolean
          rev_note:
            optional: true
            description: >
              Release notes for this revision.
            limit: 0-512 characters
            type: String
          script:
            description: >
              The shell script to run on boot.
            type: String
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "label": "Initial Label",
                "distributions": ["linode/ubuntu15.4", "linode/ubuntu15.10"],
                "script": "#!..."
              }' \
              https://$api_root/$version/linode/stackscripts
          python: |
            import stackscript
            TODO
  /linode/stackscripts/$id:
    group: StackScripts
    authenticated: true
    description: >
      Manage a particular StackScript.
    methods:
      GET:
        response: stackscript
        oauth: stackscripts:view
        description: >
          Returns information about this StackScript.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X GET \
              https://$api_root/$version/linode/stackscripts/$stackscript_id
          python: |
            import stackscript
            TODO
      PUT:
        oauth: stackscripts:modify
        description: >
          Edits this StackScript.
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "label": "New Label"
              }' \
              https://$api_root/$version/linode/stackscripts/$stackscript_id
          python: |
            import stackscript
            TODO
      DELETE:
        oauth: stackscripts:delete
        description: >
          Deletes this StackScript.  This action cannot be undone.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
              -X DELETE \
              https://$api_root/$version/linode/stackscripts/$stackscript_id
          python: |
            import stackscript
            TODO
  /linode/distributions:
    group: Distributions
    description: >
      View the collection of distributions.
    methods:
      GET:
        response: distribution
        paginationKey: distributions
        description: >
          Returns a list of distributions.
        examples:
          curl: |
            curl https://$api_root/$version/linode/distributions
          python: |
            client.linode.get_distributions()
  /linode/distributions/$id:
    group: Distributions
    type: resource
    description: >
      Returns information about a specific distribution.
    methods:
      GET:
        response: distribution
        description: >
          Returns information about this distribution.
        examples:
          curl: |
            curl https://$api_root/$version/linode/distributions/$distribution_id
          python: |
            distro = linode.Distribution(client, 'linode/debian8')
  /linode/kernels:
    group: Kernels
    description: >
      Returns collection of kernels.
    methods:
      GET:
        response: kernel
        paginationKey: kernels
        description: >
          Returns list of kernels.
        examples:
          curl: |
            curl https://$api_root/$version/linode/kernels
          python: |
            client.linode.get_kernels()
  /linode/kernels/$id:
    group: Kernels
    type: resource
    description: >
      Returns information about a specific kernel.
    methods:
      GET:
        response: kernel
        description: >
          Returns information about this kernel.
        examples:
          curl: |
            curl https://$api_root/$version/linode/kernels/$kernel_id
          python: |
            kernel = linode.Kernel(client, 'linode/latest')
  /linode/types:
    group: Types
    description: >
      Returns collection of types.
    methods:
      GET:
        response: type
        paginationKey: types
        description: >
          Returns list of types.
        examples:
          curl: |
            curl https://$api_root/$version/linode/types
          python: |
            client.linode.get_types()
  /linode/types/$id:
    group: Types
    type: resource
    description: >
      Returns information about a specific Linode type offered by Linode.
    methods:
      GET:
        response: type
        description: >
          Returns information about this type.
        examples:
          curl: |
            curl https://$api_root/$version/linode/types/$type_id
          python: |
            type = linode.Type(client, 'g5-standard=1')
  /linode/volumes:
    group: Volumes
    authenticated: true
    description: >
        Manage your Block Storage Volumes.
    methods:
      GET:
        response: volume
        paginationKey: volumes
        oauth: volumes:view
        description: >
          Returns a list of volumes.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://$api_root/$version/linode/volumes
          python: |
            volumes = client.linode.get_volumes()
      POST:
        oauth: volume:create
        description: >
          Create a new Block Storage Volume
        params:
          label:
            description: >
              A unique label to identify your new volume with.
            type: String
          region:
            description: >
              Which region the new volume should be created in.
            type: String
            value: us-east-1a
          size:
            optional: true
            description: >
              The size in GiBs that you wish to make your new volume.
              Defaults to 20 GiB, can be as large as 1024 GiB (1 TiB).
            type: Integer
          linode_id:
            optional: true
            description: >
              An id to a Linode you'd like this volume to be attached to after
              creation. Requires an additional scope of `linode:modify` and you
              must have permission to access that given Linode.
            type: Integer
          config_id:
            optional: true
            description: >
              An id to a Linode configuration profile to used when attaching to
              a Linode that has more than one configuration profile.
            type: Integer
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: token $TOKEN" \
                -X POST -d '{
                  "label": "a_fancy_new_volume",
                  "datacenter": "newark",
                  "size": "100"
                }'
                https://$api_root/$version/volumes
          python: |
            import linode
            TODO
  /linode/volumes/$id:
    group: Volumes
    type: resource
    authenticated: true
    description: >
      Manage an individual Block Storage Volume.
    methods:
      GET:
        response: volume
        oauth: volumes:view
        description: >
          Returns information about this Volume.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                https://$api_root/$version/linode/volumes/$volume_id
          python: |
            v = linode.Volume(client, 123)
      DELETE:
        oauth: volumes:delete
        description: >
          Removes a volume from your account.
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                -X DELETE \
                https://$api_root/$version/linode/volumes/$volume_id
          python: |
            v = linode.Volume(client, 123)
            v.delete()
      POST:
        oauth: volume:create
        description: >
          Create a new Block Storage Volume
        params:
          label:
            description: >
              A unique label to identify your new volume with.
            type: String
          region:
            description: >
              Which region the new volume should be created in.
            type: String
            value: us-east-1a
          size:
            optional: true
            description: >
              The size in GiBs that you wish to make your new volume.
              Defaults to 20 GiB, can be as large as 1024 GiB (1 TiB).
            type: Integer
          linode_id:
            optional: true
            description: >
              An id to a Linode you'd like this volume to be attached to after
              creation. Requires an additional scope of `linode:modify` and you
              must have permission to access that given Linode.
            type: Integer
          config_id:
            optional: true
            description: >
              An id to a Linode configuration profile to used when attaching to
              a Linode that has more than one configuration profile.
            type: Integer
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: token $TOKEN" \
                -X POST -d '{
                  "label": "a_fancy_new_volume",
                  "datacenter": "newark",
                  "size": "100"
                }'
                https://$api_root/$version/volumes
          python: |
            import linode
            TODO 
  /linode/volumes/$id/attach:
    group: Volumes
    authenticated: true
    methods:
      POST:
        oauth: volume:modify
        description: >
          Attach a Block Storage Volume to a Linode
        params:
          linode_id:
            description: >
              An id to a Linode you'd like this volume to be attached to.
              Requires an additional scope of `linode:modify` and you
              must have permission to access that given Linode.
            type: Integer
          config_id:
            optional: true
            description: >
              An id to a Linode configuration profile to used when attaching to
              a Linode that has more than one configuration profile.
            type: Integer
        examples:
          curl: |
            curl -H "Content-Type: application/json" \
                -H "Authorization: token $TOKEN" \
                -X POST -d '{
                    "linode_id": 1234
                }'
                https://$api_root/$version/volumes/$volume_id/attach
          python: |
            import linode
            TODO
  /linode/volumes/$id/detach:
    group: Volumes
    type: resource
    authenticated: true
    methods:
      POST:
        oauth: volumes:modify,linodes:modify
        description: >
          Detach a volume from a Linode
        examples:
          curl: |
            curl -H "Authorization: Bearer $TOKEN" \
                -X POST \
                https://$api_root/$version/linode/volumes/$volume_id/detach
          python: |
            v = linode.Volume(client, 123)
            v.detach()
  /linode/instances/$id/stats:
    group: Stats
    type: Action
    authenticated: true
    description: >
      Returns CPU, IO, IPv4, and IPv6 stats for the last 24 hours.
    methods:
      GET:
        response: stats
        oauth: linodes:view
        description: >
           Returns statistics for the last 24 hours.
        examples:
          curl: |
            curl -H "Authorization: token $TOKEN" \
                https://$api_root/$version/linode/instances/$linode_id/stats
  /linode/instances/$id/stats/$year/$month:
    group: Stats
    type: Action
    authenticated: true
    description: >
      Returns CPU, IO, IPv4, and IPv6 stats for a specific month.
    methods:
      GET:
        response: stats
        oauth: linodes:view
        description: >
          Returns statistics for the requested month. The last 30 days of 
          available data will be returned if the current month is requested.
        examples:
          curl: |
            curl -H "Authorization: token $TOKEN" \
                https://$api_root/$version/linode/instances/$linode_id/stats/2017/08
