name: LinodeClient
import: from linode import LinodeClient
desc: >
    The <code>LinodeClient</code> class is responsible for communicating with https://api.linode.com
constructor:
    name: LinodeClient
    parameters:
        token:
            keyword: false
            desc: >
                The OAuth Token to use when talking to the the API
        base_url:
            keyword: true
            desc: Who this LinodeClient should talk to.
            default: "'https://api.linode.com/v4'"
    example: >
            client = LinodeClient('my-token')
methods:
    get_regions:
        desc: >
            Retrieves a list of Region objects.  This function is filterable - include filters
            in the parameters list to retrieve only specific objects.
        parameters:
            '*filters':
                desc: Any number of filters to this function
                keyword: false
        example: >
            region = client.get_regions(linode.Region.label.contains("Newark"))[0]
        returns: A list of Region objects
    get_domains:
        desc: >
            Retrieves a list of Domain objects.  This function is filterable - include filters in the
            parameters list to retrieve only specific objects.
        parameters:
            '*filters':
                desc: Any number of filters to this function
                keyword: false
        example: >
            domains = client.get_domains()
        returns: A list of Domain objects
    create_domain:
        desc: Creates a new Domain record.
        parameters:
            domain:
                desc: The Domain we are managing
                keyword: false
            master:
                desc: Is this the master Domain record?
                keyword: true
                default: 'True'
            '**kwargs':
                desc: >
                    Any number of additional keyword arguments to pass to the POST /domains endpoint.  For more information, see
                    the endpoint docs for complete breakdown.
                keyword: false
        example: |
            z = client.create_domain('example.org')
groups:
    linode:
        name: Linode
        desc: >
            Includes all methods for accessing and creating resources related to Linodes.
        methods:
            get_distributions:
                desc: >
                    Retrieves a list of Distribution objects.  This function is filterable - include fitlers
                    in the parameters list to retrieve only specific objects.
                parameters:
                    '*filters':
                        desc: Any number of filters to this function
                        keyword: false
                example: >
                    distros = client.linode.get_distributions(linode.Distribution.vendor == "Debian")
                returns: A list of Distribution objects
            get_types:
                desc: >
                    Retrieves a list of Type objects.  This function is filterable - include filters in
                    the parameters list to retrieve only specific objects.
                parameters:
                    '*filters':
                        desc: Any number of filters to this function
                        keyword: false
                example: >
                    type = client.linode.get_types(linode.Types.label == "Linode 1024")[0]
                returns: A list of Type objects
            get_instances:
                desc: >
                    Retrives a list of Linode objects.  This function is filterable - include filters in
                    the parameters list to retrieve only specific objects.
                parameters:
                    '*filters':
                        desc: Any number of filters to this function
                        keyword: false
                example: >
                    linodes = client.linode.get_instances(linode.Linode.group == "production")
                returns: A list of Linode objects
            get_stackscripts:
                desc: >
                    Retrieves a list of StackScript objects.  This function is filterable - include filters
                    in the parameters list to retrieve only specific objects.
                parameters:
                    '*filters':
                        desc: Any number of filters to this function
                        keyword: false
                example: >
                    stackscripts = client.linode.get_stackscripts()
                returns: A list of StackScript objects
            get_kernels:
                desc: >
                    Retrieves a list of Kernel objects.  This function is filterable - include filters in the
                    parameters list to retrieve only specific objects.
                parameters:
                    '*filters':
                        desc: Any number of filters to this function
                        keyword: false
                example: >
                    kernels = client.linode.get_kernels(linode.Kernel.kvm == True)
                returns: A list of Kernel objects
        create_instance:
            desc: >
                Creates a new Linode object.  Requires the <code>OAuthScopes.Linodes.create</code> scope.
            parameters:
                type:
                    desc:  A Type object which represents the Linode plan to create.  Must be a Linode type.
                    keyword: false
                region:
                    desc: A Region object which is the region in which this Linode will be created
                    keyword: false
            example: |
                type = client.linode.get_types(linode.Type.label == 'Linode 1024')[0]
                region = client.get_regions(linode.Region.label.contains('Newark'))[0]
                l = client.create_linode(type, region)
            returns: A Linode object
        create_instance*:
            desc: >
                Creates a new Linode object and deploys a Distribution to it.  Requires <code>OAuthScopes.Linodes.create</code>
                scope.
            parameters:
                type:
                    desc:  A Type object which represents the Linode plan to create.  Must be a Linode type.
                    keyword: false
                region:
                    desc: A Region object which is the region in which this Linode will be created
                    keyword: false
                source:
                    desc: >
                        A Distribution object to deiploy to this Linode.
                    keyword: true
                    default: None
                '**kwargs':
                    desc: >
                        Any number of additional keyword arguments to pass to the POST /linodes endpoint.  These depend on the
                        source parameter's value.  See the endpoint docs for more information.
                    keyword: false
            example: |
                type = client.linode.get_types(linode.Type.label == 'Linode 1024')[0]
                region = client.get_regions(linode.Region.label.contains('Newark'))[0]
                distro = client.linode.get_distributions(linode.Distribution.vendor == 'Debian')[-1]
                l = client.create_linode(type, region, source=distro)
            returns: A tuple containing the new Linode object and generated root password for the Linode
        create_instance**:
            desc: >
                Creates a new Linode object from a StackScript.  Requires the <code>OAuthScopes.Linodes.create</code> scope.
            parameters:
                type:
                    desc:  A Type object which represents the Linode plan to create.  Must be a Linode type.
                    keyword: false
                region:
                    desc: A Region object which is the region in which this Linode will be created
                    keyword: false
                stackscript_id:
                    desc: >
                        The StackScript to deploy this Linode with.
                    keyword: true
                    default: None
                stackscript_data:
                    desc: >
                        A dict containing values for all StackScript user-defined fields.
                    keyword: true
                    default: None
                source:
                    desc: >
                        The Distribution to deploy to this Linode.  Must be a Distribution the given StackScript supports.
                    keyword: true
                    default: None
                '**kwargs':
                    desc: >
                        Any number of additional keyword arguments to pass to the POST /linodes endpoint.  These depend on the
                        source parameter's value.  See the endpoint docs more information.
                    keyword: false
            example: |
                type = client.linode.get_types(linode.Type.label == 'Linode 1024')[0]
                region = client.get_regions(linode.Region.label.contains('Newark'))[0]
                distro = client.linode.get_distributions(linode.Distribution.vendor == 'Debian')[-1]
                stackscirpt = linode.StackScript(client, 'stackscript_123')
                l = client.create_linode(type, region, source=distro, stackscript_id=stackscript.id)
            returns: A Linode object
        create_stackscript:
                desc: >
                    Creates a StackScript object.  Requirs the <code>OAuthScopes.StackScripts.create</code> scope.
                parameters:
                    label:
                        desc: The label for this StackScript
                        keyword: false
                    script:
                        desc: Either the script in its entirety, or a path to a file containing the script
                        keyword: false
                    distros:
                        desc: Either one or a list of Distribution objects this StackScript runs on
                        keyword: false
                    desc:
                        desc: The description of this StackScrip
                        keyword: true
                        default: None
                    public:
                        desc: Whether or not this StackScript should be public
                        keyword: true
                        default: 'False'
                    '**kwargs':
                        desc: >
                            Any number of additional keyword arguments to pass to the POST /stackscripts endpoint.  For more information,
                            see the endpoint docs for complete breakdown.
                        keyword: false
                example: |
                    distros = client.linode.get_distributions(linode.or_(linode.Distribution.vendor == 'Ubuntu', linode.Distribution.vendor == 'Debian'))
                    s = client.create_stackscript('my-stackscript', '~/stackscripts/my-stackscript.sh', distros)
