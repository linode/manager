import * as React from 'react';
import Box from 'src/components/core/Box';
import Button from 'src/components/Button';
import TextField from 'src/components/TextField';
import Typography from 'src/components/core/Typography';
import { Notice } from 'src/components/Notice/Notice';
import { styled } from '@mui/material/styles';

interface Props {
  error?: string;
  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;
  onCancel: () => void;
  onSubmit: () => void;
  submitting: boolean;
  token: string;
  twoFactorConfirmed: boolean;
}

export const ConfirmToken = React.memo((props: Props) => {
  const {
    error,
    handleChange,
    onCancel,
    onSubmit,
    submitting,
    token,
    twoFactorConfirmed,
  } = props;

  return (
    <React.Fragment>
      <Typography variant="body1" data-qa-copy>
        Please enter the token generated by your 2FA app:
      </Typography>
      <TextField
        value={token}
        errorText={error}
        label="Token"
        onChange={handleChange}
        data-qa-confirm-token
      />
      {twoFactorConfirmed && (
        <StyledWarningNotice
          warning
          spacingTop={16}
          spacingBottom={8}
          text={
            'Confirming a new key will invalidate codes generated from any previous key.'
          }
        />
      )}
      <Box display="flex" justifyContent="flex-end" style={{ gap: 16 }}>
        <Button buttonType="secondary" onClick={onCancel} data-qa-cancel>
          Cancel
        </Button>
        <Button
          buttonType="primary"
          onClick={onSubmit}
          loading={submitting}
          data-qa-submit
        >
          Confirm Token
        </Button>
      </Box>
    </React.Fragment>
  );
});

const StyledWarningNotice = styled(Notice, {
  label: 'StyledWarningNotice',
})(({ theme }) => ({
  marginTop: theme.spacing(2),
  marginLeft: '0 !important',
}));
