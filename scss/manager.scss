@import 'variables';
@import 'mixins';

@import 'bootstrap';

@import 'components/index.scss';
@import 'linodes/index.scss';
@import 'layout/index.scss';
@import 'styleguide/index.scss';

.btn, a {
    transition: background .35s, color .2s, border .1s;
}

html,
body,
#root,
#root > [data-reactroot],
.layout {
    height: 100%;
}

body {
    background: $light-gray;
    color: $black;
    font-size: $font-normal;
}

.layout {
    // TODO: min-width considerations:
    // * linode cards need > 700px;
    // * linode rows need > 1150px;
    // * linode page needs > 980px
    min-width: 1150px;
}

h1, h2, h3, h4, h5, h6 {
    margin: 0;
    font-weight: normal;
    line-height: normal;
    color: $black;
}

h1 {
    font-size: $font-large;
}

h2 {
   font-size: $font-medium;
}

h3 {
    font-size: $font-small;
}

a {
    color: $blue;
    text-decoration: none;

    &:hover,
    &:active,
    &:focus {
        color: $dark-blue;
    }
}

a > i.fa {
    color: $blue;
}

label {
    margin-bottom: 0;
}

.row-eq-height {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;

    .card {
        height: 100%;
    }
}

.selected {
    background: $light-blue;
}

.fa {
    color: #bfbfbf;
}

.sidebar {
    position: fixed;
    top: $nav-height;
    left: 0;
    bottom: 0;
    width: $sidebar-width;
    background: $white;
    border-right: $border;
    overflow-y: scroll;
    padding-bottom: 15px;

    & section:first-of-type {
        margin-top: 0;

        header h3 {
            border-top: 0;
        }
    }

    header {
        h3 {
            text-transform: uppercase;
            background-color: $gray;
            border-bottom: $border;
            border-top: $border;
            border-color: $border-gray;
            font-size: $font-xs-small;
            color: #777;
            padding: 10px 0;
            padding-left: 34px;
        }
    }

    a {
        color: $black;
        text-decoration: none !important;
        line-height: 34px;
    }

    .fa {
        width: 15px;
        color: #acacac;
    }

    ul {
        text-align: left;

        li {
            margin-top: 15px;
            padding-left: 15px;
            margin-left: 15px;
            margin-right: 15px;
            border-radius: 3px;

            &.active,
            &:hover,
            &:active,
            &:focus {
                background-color: $green;
                color: white;

                .fa {
                    color: white;
                }
            }

            span:last-of-type {
                padding-left: 15px;
            }
        }
    }
}


.main {
    display: flex;
    flex-direction: column;
    margin-left: $sidebar-width;
    min-height: 100%;
    padding-top: $nav-height;
    width: calc(100% - #{$sidebar-width});
}

.main .main-inner {
    flex: 1;
}

.main-header {
    background: $white;
    padding: $main-padding-tb 0;
}

// Deals with the fact that tablist extends container which gives it a max-width
.main-header-fix {
    height: 35px;
    width: 100%;
    background: $white;
    border-bottom: $border;
    margin-bottom: -37px;
}

.react-tabs {
    [role="tablist"] {
        @extend .container;
        background: $white;
        border-bottom: $border;
        margin: 0 auto;
    }

    [role="tablist"].form-tab-list [role="tab"] {
        padding: 6px 12px;
    }

    [role="tab"] {
        border-color: 1px solid transparent;
        padding: 0;

        &:not(:last-of-type) {
            margin-right: 15px;
        }

        &:hover,
        &[aria-selected="true"] {
            background: $light-gray;
            border: 1px solid #bbb;
            border-bottom: 0;
            border-radius: 2px 2px 0 0;
            -moz-border-radius: 2px 2px 0 0;
            -webkit-border-radius: 2px 2px 0 0;
        }

        &:hover,
        &:focus,
        &:active,
        &:active:focus {
            outline: 0;
            box-shadow: none;

            &::after {
                display: none;
            }
        }

        a {
            color: $black;
            display: block;
            padding: 6px 12px;
            text-decoration: none !important;
        }
    }

    /* define subtab behavior */
    .react-tabs {
        [role="tablist"] {
            margin-top: $main-padding-tb/2;
            padding: 0;
            background: transparent;
        }

        [role="tab"] {
            border: 0; // reset from above
            border-bottom: 3px solid transparent;

            &:hover,
            &[aria-selected="true"] {
                border: 0;
                border-bottom: 3px solid $blue;
                background: transparent;
            }
        }
    }
}

.form-control {
    font-size: $font-normal;
    border-radius: 2px;
    color: $black;
    display: inline-block;

    &:focus {
        color: $black;
    }
}

input:not([type="checkbox"]):not([type="radio"]),
select,
select.form-control,
.btn:not(.btn-help) {
    height: $input-height !important;
    line-height: $input-height - 1px !important;
    font-size: $font-normal !important;
    padding: 0 0 0 $input-padding;

    &.btn {
        padding: 0 $input-padding;
    }
}

.vcenter {
    display: inline-block;
    vertical-align: middle;
    float: none;
    position: relative;
}

section,
section.card {
    margin-top: $main-padding-tb;
}

.input-group {
    input {
        margin: 0;
        border: $border;
        border-radius: 0;
        &[readonly] {
            background-color: $white;
            width: 12.5rem;
        }
    }

    .input-group-btn {
        float: left;
        .btn {
            z-index: initial;
        }
    }

    .btn {
        margin: 0;
    }
}

hr {
    width: 300px;
    margin: $main-padding-tb/2 0;
}

.btn {
    text-decoration: none;
    border-radius: 2px;
    border: $border;
    background: $light-gray;

    &.btn-default {
        color: $black;
    }

    .fa {
        line-height: $input-height;
    }

    &:not([disabled]):hover,
    &:active,
    &:focus,
    &:active:focus /* yes, this is a special case */ {
        background: $gray;
        color: $black;
        outline: 0;
    }

    &.btn-help, &.btn-warning {
        $size: 24px;
        .fa {
            color: $lightest-black;
            line-height: $size - 2px;
        }
        background-color: $gray;
        font-size: $size / 2;
        line-height: $size - 2px;
        padding: 0 0 0 0.1rem;
        margin: 0 1rem;
        display: inline-block;
        width: $size;
        height: $size;
        border-radius: $size / 2;
        font-weight: bold;
        text-indent: -1px;

        &:hover {
            background-color: $blue;
            border: $blue;

            .fa {
                color: $white;
                line-height: $size + 2px;
            }
        }

        /* TODO: Remove this. */
        h1 &, h2 &, h3 & {
            margin-top: -0.25rem;
        }
    }

    &.btn-warning {
        .fa {
            color: $white;
        }
        background-color: $red;
        border-color: $red;
        text-indent: -0.5px;

        &:hover {
            background-color: $white;
            border: $white;

            .fa {
                color: $red;
            }
        }
    }

    &.btn-primary {
        background: $blue;
        border: 1px solid $blue;

        &:hover,
        &:active,
        &:focus {
            color: white;
            background: $blue !important;
            border: 1px solid $blue !important;
        }

        &:not([disabled]):hover,
        &:not([disabled]):active,
        &:not([disabled]):focus,
        &:not([disabled]):focus:active {
            border-color: $blue; /* :focus:active needs this */
            background: white;
            color: $blue;
        }
    }

    &.btn-primary-outline {
        background: white;
        border: 1px solid $blue;
        color: $blue;

        &:not([disabled]):hover,
        &:not([disabled]):active,
        &:not([disabled]):focus {
            background: $blue;
            color: white;
        }
    }

    &.btn-cancel, &.btn-cancel:not([href]) {
        background: transparent;
        border: 0;
        color: $blue;
        padding: 0;

        &:not([disabled]):hover {
            text-decoration: underline;
            color: $blue;
        }
    }

    &.btn-danger {
        background: $red;
        border: 1px solid $red;

        &[disabled]:hover,
        &[disabled]:active,
        &[disabled]:focus {
            color: white;
            background: $red;
        }

        &:hover,
        &:active,
        &:focus {
            color: red;
            background: transparent;
        }
    }

    &.btn-danger-outline {
        border-color: $red;
        background: transparent;
        color: $red;

        &:hover,
        &:active,
        &:focus {
            background: $red;
            color: white;
        }
    }
}

.datacenter-style img {
    margin-right: 15px;
    -webkit-filter: contrast(70%) saturate(90%);
    filter: contrast(70%) saturate(90%);
    opacity: 0.7;
}

.distro-style img {
    margin-right: 15px;
}

.input-group-addon {
    background: $light-gray;
    height: $input-height;
    line-height: calc(#{$input-height}-2px});
    padding: 0 $input-padding;

    .Checkbox {
        line-height: 28px;
        position: relative;
        top: 1px;
    }
}

:not(.btn-group) .btn.float-xs-right + .btn.float-xs-right,
.btn.float-xs-right + label.float-xs-right {
    display: inline-block;
    margin-right: 15px;
}

:not(.btn-group) .btn.float-xs-left + .btn.float-xs-left,
.btn.float-xs-left + label.float-xs-left {
    display: inline-block;
    margin-left: 15px;
}

.dropdown-menu {
    padding: 0;
    border: 0;
    margin-top: -1px;
    margin-left: 1px;

    .dropdown-item:first-of-type {
        margin-left: -1px;
    }

    .dropdown-item:not(:first-of-type) {
        border-top: 0;
    }
}

.grid-list {
    a .fa {
        color: $lightest-black;
        cursor: pointer;
        cursor: hand;
    }

    .fa {
        font-size: $font-small;
        color: $light-black;
    }

    span, div {
        padding-right: 15px;
        line-height: $input-height;
        display: inline-block;
    }

    div {
        position: relative;
        top: -3px;
    }

    span:last-of-type {
        padding-right: 0;
    }
}

.navicon {
    font-size: $font-small;
    padding-left: 15px;
    position: relative;
    top: 2px;

    &:hover,
    &:active,
    &:focus {
        color: $blue;
    }
}

table {
    width: 100%;

    th:first-of-type,
    td:first-of-type {
        padding-left: 15px;
    }

    th:last-of-type,
    td:last-of-type {
        padding-right: 15px;
    }

    td:not(:first-of-type) {
        white-space: nowrap;
    }

    thead {
        background: $light-gray;
        border: $border;
        border-bottom: 0;
        height: 35px;
        line-height: 35px;

        th {
            font-weight: normal;
        }

        th:last-of-type {
            border-right: $border;
        }

        &.clear-thead {
            background-color: transparent;
            border: 0;
            th {
                border: 0;
                border-top: 0;
                border-bottom: 0;
                padding-bottom: 0.1rem;
                padding-top: 0;
            }
            th:last-of-type {
                border-right: 0;
            }
        }
    }

    tbody {
        tr {
            height: 35px;
            line-height: 35px;
            border: $border;
            margin: 0 15px;
            
            &:not(.selected) {
                background: $white;
            }
        }
        &.hard-border {
            tr {
                background: $light-gray;

                td {
                    border: 0;
                    padding: 0 15px;
                    line-height: 35px;
                }
            }
        }
    }
}

.text-danger {
    color: $red;
}

.alert {
    &-info {
        background: $yellow;
        border-color: $dark-gray;
        color: $light-black;
    }

    &-danger {
        margin-bottom: 0;
        margin-top: 15px;
    }
}

.action-link {
    color: $lightest-black;
    &:hover {
        color: $dark-blue;
    }
}

footer {
    padding-bottom: 15px;

    a {
        font-size: $font-xs-normal;
        color: $lightest-black;
        padding: 0 10px;
    }
}

.error {
    h1 {
        font-size: 8rem; /* Special font-size case */
        color: $dark-gray;
    }

    h2 {
        font-size: $font-large;
    }

    p {
        margin: 1rem;
    }
}
.linodes {
    .linode-label {
        color: $black !important;
        font-size: $font-small;

        & + .text-muted {
            line-height: 15px;
        }
    }

    .card {
        margin-bottom: $main-padding-tb;

        header {
            padding-top: 15px;
            padding-bottom: 15px;
        }

        header input[type="checkbox"] {
            margin-top: 8px;
        }

        header > * {
            vertical-align: top;
        }
    }

    td {
        padding-top: 10px;
        padding-bottom: 10px;
        vertical-align: middle;
    }

    .linode .StatusDropdown {
        @extend .float-xs-right;
    }

    td.linode-checkbox {
        padding: 0 15px;
        width: 46px;
    }

    td.linode-checkbox > input:hover {
        cursor: pointer;
    }

    .ips {
        line-height: initial;
    }

    .display-group {
        color: $light-black;
        margin-bottom: $main-padding-tb/3;
    }

    tr.display-group {
        border-left: 0;
        font-size: $font-small;

        td {
            background: $light-gray;
            padding-bottom: 0;
            padding-left: 0;
        }
    }
}

section.card header + .react-tabs {
    margin-top: -10px;
}

.sub-header {
    color: $light-black;
    padding-top: 15px;
    padding-bottom: 15px;
}

header .sub-header {
    padding-bottom: 0px;
}

.create-page {
    padding-top: 15px;

    section.card:not(:last-of-type) {
        padding-bottom: 0;
    }

    section.card:nth-of-type(3) header {
        margin-bottom: 0;
    }

    .alert {
        display: inline-block;
        margin: $main-padding-tb/2 0 0 0;
    }

    .backups {
        margin-bottom: 15px;
    }
}

.list-unstyled {
    margin-bottom: 0;
}

p {
    margin-bottom: $main-padding-tb/2;
}

.feedback {
    position: fixed;
    right: -400px;
    top: 300px;
    z-index: 999;
    -webkit-transition: all .3s ease-out;
    -moz-transition: all .3s ease-out;
    -o-transition: all .3s ease-out;
    -ms-transition: all .3s ease-out;

    &.open {
        right: 0;
    }

    .feedback-button {
        $rotation: -90deg;
        position: absolute;
        left: -1 * $input-height * 2 + 4px;
        top: 50%;
        -webkit-transform: rotate($rotation);
        -moz-transform: rotate($rotation);
        -o-transform: rotate($rotation);
        -ms-transform: rotate($rotation);
        transform: rotate($rotation);
    }

    .card {
        width: 400px;
    }
}

.checkbox + .checkbox {
    margin-top: 5px;
}

.row-justify {
    @extend .row;
    display: flex;
    flex-wrap: wrap;

    margin-left: -$grid-gutter-width-base / 4;
    margin-right: -$grid-gutter-width-base / 4;

    & > [class^="col-"] {
        padding-left: $grid-gutter-width-base / 4;
        padding-right: $grid-gutter-width-base / 4;
    }
}
