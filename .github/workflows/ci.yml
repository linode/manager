name: ci

on: 
  push:
    branches:
      - master
  pull_request:

jobs:
  test-sdk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn --frozen-lockfile
      - run: yarn workspace @linode/api-v4 run test

  build-sdk:
    runs-on: ubuntu-latest
    needs:
      - test-sdk
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn --frozen-lockfile
      - run: yarn workspace @linode/api-v4 run build
      - uses: actions/upload-artifact@v2
        with:
          name: linode-api-v4
          path: packages/api-v4

  test-manager:
    runs-on: ubuntu-latest
    needs:
      - build-sdk
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/download-artifact@v2
        with:
          name: linode-api-v4
          path: packages/api-v4
      - run: yarn --frozen-lockfile
      - run: yarn workspace linode-manager run test

  build-manager:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs:
      - build-sdk
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/download-artifact@v2
        with:
          name: linode-api-v4
          path: packages/api-v4
      - run: cp packages/manager/config/environments/beta packages/manager/.env
      - run: yarn --frozen-lockfile
      - run: yarn workspace linode-manager run build
      - uses: actions/upload-artifact@v2
        with:
          name: linode-manager
          path: packages/manager/build

  publish-sdk:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs:
      - test-sdk
      - build-sdk
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: linode-api-v4
          path: packages/api-v4
      - uses: JS-DevTools/npm-publish@v1
        id: npm-publish
        with:
          token: ${{ secrets.NPM_AUTH_TOKEN }}
          package: ./packages/api-v4/package.json
      - name: slack-notify
        uses: rtCamp/action-slack-notify@master
        if: steps.npm-publish.outputs.type != 'none'
        env:
          SLACK_CHANNEL: api-js-client
          SLACK_TITLE: "Linode JS Client v${{ steps.npm-publish.outputs.version}}"
          SLACK_MESSAGE: ":rocket: Linode JS Client has been published to NPM: ${{ steps.npm-publish.outputs.old-version }} => ${{ steps.npm-publish.outputs.version }}. View the changelog at https://github.com/linode/manager/blob/master/packages/api-v4/CHANGELOG.md" 
          SLACK_USERNAME: npm-bot
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_ICON_EMOJI: ":package:"
          MSG_MINIMAL: true


  publish-manager:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs:
      - test-manager
      - build-manager
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: linode-manager
          path: packages/manager/build
      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_ENDPOINT: https://us-east-1.linodeobjects.com
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
          SOURCE_DIR: packages/manager/build
